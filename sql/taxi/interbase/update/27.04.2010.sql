CREATE OR ALTER PROCEDURE GET_ORDER_COUNT
(
  DATE_BEGIN TIMESTAMP,
  DATE_END TIMESTAMP
)
RETURNS
(
  DATE_FROM TIMESTAMP,
  DATE_TO TIMESTAMP,
  ORDER_COUNT INTEGER,
  ORDER_SUM NUMERIC(15,2)
)
AS
  DECLARE DAY_TO INTEGER;
  DECLARE MONTH_TO INTEGER;
  DECLARE YEAR_TO INTEGER;
  DECLARE INC_SEC INTEGER;
  DECLARE HOUR_FROM INTEGER;
  DECLARE HOUR_TYPE INTEGER;
BEGIN
  IF (DATE_BEGIN IS NULL) THEN
    DATE_BEGIN=CURRENT_DATE;

  IF (DATE_END IS NULL) THEN BEGIN
    DATE_END=CURRENT_DATE;
    DAY_TO=1;
    YEAR_TO=EXTRACT(YEAR FROM DATE_END);
    MONTH_TO=EXTRACT(MONTH FROM DATE_END)+1;
    IF (MONTH_TO>12) THEN BEGIN
      MONTH_TO=1;
      YEAR_TO=YEAR_TO+1;
    END
    DATE_END=CAST((CAST(DAY_TO AS VARCHAR(2))||'.'||
                   CAST(MONTH_TO AS VARCHAR(2))||'.'||
                   CAST(YEAR_TO AS VARCHAR(4))) AS TIMESTAMP);
  END

  DATE_FROM=DATE_BEGIN;

  HOUR_TYPE=0;

  WHILE (HOUR_TYPE<>5) DO BEGIN

    HOUR_FROM=EXTRACT(HOUR FROM DATE_FROM);

    IF (HOUR_TYPE=0) THEN BEGIN

      IF (HOUR_FROM>=20) THEN BEGIN
        DATE_TO=CAST(CAST((DATE_FROM+1) AS DATE) AS TIMESTAMP)+8*60*60*(1e0/24/60/60);
        HOUR_TYPE=1;
      END ELSE IF (HOUR_FROM<8) THEN BEGIN
        DATE_TO=CAST(CAST((DATE_FROM) AS DATE) AS TIMESTAMP)+8*60*60*(1e0/24/60/60);
        HOUR_TYPE=1;
      END ELSE IF (HOUR_FROM<9) THEN BEGIN
        DATE_TO=CAST(CAST((DATE_FROM) AS DATE) AS TIMESTAMP)+9*60*60*(1e0/24/60/60);
        HOUR_TYPE=2;
      END ELSE IF (HOUR_FROM<17) THEN BEGIN
        DATE_TO=CAST(CAST((DATE_FROM) AS DATE) AS TIMESTAMP)+17*60*60*(1e0/24/60/60);
        HOUR_TYPE=3;
      END ELSE IF (HOUR_FROM<20) THEN BEGIN
        DATE_TO=CAST(CAST((DATE_FROM) AS DATE) AS TIMESTAMP)+20*60*60*(1e0/24/60/60);
        HOUR_TYPE=4;
      END

    END ELSE BEGIN

      INC_SEC=CASE
                WHEN HOUR_TYPE=4 THEN 12*60*60
                WHEN HOUR_TYPE=1 THEN 1*60*60
                WHEN HOUR_TYPE=2 THEN 8*60*60
                WHEN HOUR_TYPE=3 THEN 3*60*60
                ELSE 0
              END;

      DATE_TO=DATE_FROM+INC_SEC*(1e0/24/60/60);

      IF (DATE_TO>=DATE_END) THEN BEGIN
        DATE_TO=DATE_END;
        HOUR_TYPE=5;
      END ELSE BEGIN
        HOUR_TYPE=HOUR_TYPE+1;
        IF (HOUR_TYPE>4) THEN
          HOUR_TYPE=1;
      END

    END

    SELECT COUNT(*), SUM(COST_FACT)
      FROM ORDERS
     WHERE RESULT_ID='6DD8DFDC671DB9A742E418FD268E7DC4' /* Полный расчет */
       AND DATE_ACCEPT>=:DATE_FROM
       AND DATE_ACCEPT<:DATE_TO
       AND PARENT_ID IS NULL
       AND FINISHED=1
      INTO :ORDER_COUNT, :ORDER_SUM;

    SUSPEND;

    DATE_FROM=DATE_TO;

  END

END

--
