unit BisTaxiDataReceiptsFm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, ComCtrls, BisFm, ActnList,
  BisDataFrm, BisDataGridFm, BisDataGridFrm, BisDataEditFm;

type
  TBisTaxiDataReceiptsFrame=class(TBisDataGridFrame)
  private
    FFilterMenuItemToday: TBisDataFrameFilterMenuItem;
    FFilterMenuItemArchive: TBisDataFrameFilterMenuItem;
    FAccountId: Variant;
    FUserName: String;
  protected
    procedure BeforeIfaceExecute(AIface: TBisDataEditFormIface); override;
  public
    constructor Create(AOwner: TComponent); override;

    property FilterMenuItemToday: TBisDataFrameFilterMenuItem read FFilterMenuItemToday;
    property FilterMenuItemArchive: TBisDataFrameFilterMenuItem read FFilterMenuItemArchive;

    property AccountId: Variant read FAccountId write FAccountId;
    property UserName: String read FUserName write FUserName;
  end;

  TBisTaxiDataReceiptsForm = class(TBisDataGridForm)
  protected
    class function GetDataFrameClass: TBisDataFrameClass; override;
  end;

  TBisTaxiDataReceiptsFormIface=class(TBisDataGridFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

var
  BisTaxiDataReceiptsForm: TBisTaxiDataReceiptsForm;

implementation

{$R *.dfm}

uses DateUtils,
     BisUtils, BisTaxiDataReceiptEditFm,
     BisConsts, BisOrders, BisFilterGroups, BisCore, BisParam;

{ TBisTaxiDataReceiptsFrame }

constructor TBisTaxiDataReceiptsFrame.Create(AOwner: TComponent);
var
  D: TDateTime;
begin
  inherited Create(Aowner);
  FilterClass:=TBisTaxiDataReceiptFilterFormIface;
  InsertClass:=TBisTaxiDataReceiptInsertFormIface;
  UpdateClass:=TBisTaxiDataReceiptUpdateFormIface;
  DeleteClass:=TBisTaxiDataReceiptDeleteFormIface;
  with Provider do begin
    ProviderName:='S_RECEIPTS';
    with FieldNames do begin
      AddKey('RECEIPT_ID');
      AddInvisible('RECEIPT_TYPE_ID');
      AddInvisible('ACCOUNT_ID');
      AddInvisible('WHO_CREATE_ID');
      AddInvisible('WHO_USER_NAME');
      AddInvisible('DATE_CREATE');
      AddInvisible('DESCRIPTION');
      Add('DATE_RECEIPT','Дата',110);
      Add('USER_NAME','Счет',110);
      Add('SUM_RECEIPT','Сумма',70).DisplayFormat:='#0.00';
      Add('RECEIPT_TYPE_NAME','Вид поступления',110);
    end;
    Orders.Add('DATE_RECEIPT',otDesc);
  end;

  D:=Core.ServerDate;

  FFilterMenuItemToday:=CreateFilterMenuItem('Сегодня');
  with FilterMenuItemToday do begin
    with FilterGroups.AddVisible do begin
      Filters.Add('DATE_RECEIPT',fcEqualGreater,DateOf(D));
      Filters.Add('DATE_RECEIPT',fcLess,IncDay(DateOf(D)));
    end;
    Checked:=true;
  end;

  FFilterMenuItemArchive:=CreateFilterMenuItem('Архив');
  with FilterMenuItemArchive do begin
    FilterGroups.AddVisible.Filters.Add('DATE_RECEIPT',fcLess,DateOf(D));
  end;

  FAccountId:=Null;
end;

procedure TBisTaxiDataReceiptsFrame.BeforeIfaceExecute(AIface: TBisDataEditFormIface);
var
  Param: TBisParam;
begin
  inherited BeforeIfaceExecute(AIface);
  if Assigned(AIface) then begin
    with AIface.Params do begin
      ParamByName('USER_NAME').Value:=FUserName;
      Param:=ParamByName('ACCOUNT_ID');
      Param.Value:=FAccountId;
      if not Param.Empty then
        Param.ExcludeModes(AllParamEditModes);
    end;
  end;
end;

{ TBisTaxiDataReceiptsFormIface }

constructor TBisTaxiDataReceiptsFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FormClass:=TBisTaxiDataReceiptsForm;
  Permissions.Enabled:=true;
  ChangeFrameProperties:=false;
end;

{ TBisTaxiDataReceiptsForm }

class function TBisTaxiDataReceiptsForm.GetDataFrameClass: TBisDataFrameClass;
begin
  Result:=TBisTaxiDataReceiptsFrame;
end;

end.
