/* Создание таблицы водителей */

CREATE TABLE /*PREFIX*/DRIVERS
(
  DRIVER_ID VARCHAR(32) NOT NULL,
  CALC_ID VARCHAR(32),
  CAR_ID VARCHAR(32) NOT NULL,
  PHONE_HOME VARCHAR(100),
  LICENSE VARCHAR(250),
  CATEGORIES VARCHAR(100),
  INSURANCE VARCHAR(250),
  HEALTH_CERT VARCHAR(250),
  ADDICT_CERT VARCHAR(250),
  PASSPORT VARCHAR(250),
  PLACE_BIRTH VARCHAR(250),
  DATE_BIRTH DATE,
  ADDRESS_RESIDENCE VARCHAR(250),
  ADDRESS_ACTUAL VARCHAR(250),
  MIN_BALANCE NUMERIC(15,2),
  PRIORITY INTEGER,
  METHOD_ID VARCHAR(32),
  PRIMARY KEY (DRIVER_ID),
  FOREIGN KEY (DRIVER_ID) REFERENCES ACCOUNTS (ACCOUNT_ID),
  FOREIGN KEY (CALC_ID) REFERENCES CALCS (CALC_ID),
  FOREIGN KEY (CAR_ID) REFERENCES CARS (CAR_ID),
  FOREIGN KEY (METHOD_ID) REFERENCES METHODS (METHOD_ID)
)

--

/* Создание просмотра водителей */

CREATE VIEW /*PREFIX*/S_DRIVERS(
    DRIVER_ID,
    CALC_ID,
    CAR_ID,
    PHONE_HOME,
    LICENSE,
    CATEGORIES,
    INSURANCE,
    HEALTH_CERT,
    ADDICT_CERT,
    PASSPORT,
    PLACE_BIRTH,
    DATE_BIRTH,
    ADDRESS_RESIDENCE,
    ADDRESS_ACTUAL,
    MIN_BALANCE,
    PRIORITY,
    METHOD_ID,
    PHONE,
    DESCRIPTION,
    USER_NAME,
    DATE_CREATE,
    LOCKED,
    SURNAME,
    NAME,
    PATRONYMIC,
    CAR_STATE_NUM,
    CAR_BRAND,
    CAR_COLOR,
    CAR_CALLSIGN,
    CAR_TYPE_ID,
    CAR_TYPE_NAME,
    CAR_TYPE_FONT_COLOR,
    CAR_TYPE_BRUSH_COLOR,
    CALC_NAME,
    METHOD_NAME)
AS
SELECT D.*,
       A.PHONE,
       A.DESCRIPTION,
       A.USER_NAME,
       A.DATE_CREATE,
       A.LOCKED,
       A.SURNAME,
       A.NAME,
       A.PATRONYMIC,
       CR.STATE_NUM AS CAR_STATE_NUM,
       CR.BRAND AS CAR_BRAND,
       CR.COLOR AS CAR_COLOR,
       CR.CALLSIGN AS CAR_CALLSIGN,
       CR.CAR_TYPE_ID,
       CT.NAME AS CAR_TYPE_NAME,
       CT.FONT_COLOR AS CAR_TYPE_FONT_COLOR,
       CT.BRUSH_COLOR AS CAR_TYPE_BRUSH_COLOR,
       CL.NAME AS CALC_NAME,
       M.NAME AS METHOD_NAME
  FROM /*PREFIX*/DRIVERS D
  JOIN /*PREFIX*/ACCOUNTS A ON A.ACCOUNT_ID=D.DRIVER_ID
  JOIN /*PREFIX*/CARS CR ON CR.CAR_ID=D.CAR_ID
  JOIN /*PREFIX*/CAR_TYPES CT ON CT.CAR_TYPE_ID=CR.CAR_TYPE_ID
  LEFT JOIN /*PREFIX*/CALCS CL ON CL.CALC_ID=D.CALC_ID
  LEFT JOIN /*PREFIX*/METHODS M ON M.METHOD_ID=D.METHOD_ID


--

/* Создание процедуры добавления водителя */

CREATE OR ALTER PROCEDURE I_DRIVER (
  DRIVER_ID VARCHAR(32),
  CALC_ID VARCHAR(32),
  CAR_ID VARCHAR(32),
  METHOD_ID VARCHAR(32),
  PHONE VARCHAR(100),
  PHONE_HOME VARCHAR(100),
  LICENSE VARCHAR(250),
  CATEGORIES VARCHAR(100),
  INSURANCE VARCHAR(250),
  HEALTH_CERT VARCHAR(250),
  DESCRIPTION VARCHAR(250),
  ADDICT_CERT VARCHAR(250),
  PASSPORT VARCHAR(250),
  PLACE_BIRTH VARCHAR(250),
  DATE_BIRTH DATE,
  ADDRESS_RESIDENCE VARCHAR(250),
  ADDRESS_ACTUAL VARCHAR(250),
  MIN_BALANCE NUMERIC(15,2),
  PRIORITY INTEGER,
  USER_NAME VARCHAR(100),
  LOCKED INTEGER,
  SURNAME VARCHAR(100),
  NAME VARCHAR(100),
  PATRONYMIC VARCHAR(100))
AS
  DECLARE ROLE_ID VARCHAR(32);
BEGIN

  INSERT INTO ACCOUNTS (ACCOUNT_ID,DATE_CREATE,USER_NAME,LOCKED,SURNAME,NAME,PATRONYMIC,IS_ROLE,PHONE,DESCRIPTION)
       VALUES (:DRIVER_ID,CURRENT_TIMESTAMP,:USER_NAME,:LOCKED,:SURNAME,:NAME,:PATRONYMIC,0,:PHONE,:DESCRIPTION);

  INSERT INTO DRIVERS (DRIVER_ID,CALC_ID,CAR_ID,METHOD_ID,PHONE_HOME,LICENSE,
                       CATEGORIES,INSURANCE,HEALTH_CERT,ADDICT_CERT,
                       PASSPORT,PLACE_BIRTH,DATE_BIRTH,ADDRESS_RESIDENCE,ADDRESS_ACTUAL,
                       MIN_BALANCE,PRIORITY)
       VALUES (:DRIVER_ID,:CALC_ID,:CAR_ID,:METHOD_ID,:PHONE_HOME,:LICENSE,
               :CATEGORIES,:INSURANCE,:HEALTH_CERT,:ADDICT_CERT,
               :PASSPORT,:PLACE_BIRTH,:DATE_BIRTH,:ADDRESS_RESIDENCE,:ADDRESS_ACTUAL,
               :MIN_BALANCE,:PRIORITY);

  ROLE_ID='3EBE04F48C07BAB246324FBA8551FEF1'; /* Водители */
  INSERT INTO ACCOUNT_ROLES (ROLE_ID,ACCOUNT_ID)
       VALUES (:ROLE_ID,:DRIVER_ID);
END

--

/* Создание процедуры изменения водителя */

CREATE OR ALTER PROCEDURE U_DRIVER (
  DRIVER_ID VARCHAR(32),
  CALC_ID VARCHAR(32),
  CAR_ID VARCHAR(32),
  METHOD_ID VARCHAR(32),
  PHONE VARCHAR(100),
  PHONE_HOME VARCHAR(100),
  LICENSE VARCHAR(250),
  CATEGORIES VARCHAR(100),
  INSURANCE VARCHAR(250),
  HEALTH_CERT VARCHAR(250),
  DESCRIPTION VARCHAR(250),
  ADDICT_CERT VARCHAR(250),
  PASSPORT VARCHAR(250),
  PLACE_BIRTH VARCHAR(250),
  DATE_BIRTH DATE,
  ADDRESS_RESIDENCE VARCHAR(250),
  ADDRESS_ACTUAL VARCHAR(250),
  MIN_BALANCE NUMERIC(15,2),
  PRIORITY INTEGER,
  USER_NAME VARCHAR(100),
  LOCKED INTEGER,
  SURNAME VARCHAR(100),
  NAME VARCHAR(100),
  PATRONYMIC VARCHAR(100),
  OLD_DRIVER_ID VARCHAR(32))
AS
BEGIN

  UPDATE ACCOUNTS
     SET ACCOUNT_ID=:DRIVER_ID,
         USER_NAME=:USER_NAME,
         LOCKED=:LOCKED,
         SURNAME=:SURNAME,
         NAME=:NAME,
         PATRONYMIC=:PATRONYMIC,
         IS_ROLE=0,
         PHONE=:PHONE,
         DESCRIPTION=:DESCRIPTION
   WHERE ACCOUNT_ID=:OLD_DRIVER_ID;

  UPDATE DRIVERS
     SET DRIVER_ID=:DRIVER_ID,
         CALC_ID=:CALC_ID,
         CAR_ID=:CAR_ID,
         METHOD_ID=:METHOD_ID,
         PHONE_HOME=:PHONE_HOME,
         LICENSE=:LICENSE,
         CATEGORIES=:CATEGORIES,
         INSURANCE=:INSURANCE,
         HEALTH_CERT=:HEALTH_CERT,
         ADDICT_CERT=:ADDICT_CERT,
         PASSPORT=:PASSPORT,
         PLACE_BIRTH=:PLACE_BIRTH,
         DATE_BIRTH=:DATE_BIRTH,
         ADDRESS_RESIDENCE=:ADDRESS_RESIDENCE,
         ADDRESS_ACTUAL=:ADDRESS_ACTUAL,
         MIN_BALANCE=:MIN_BALANCE,
         PRIORITY=:PRIORITY
   WHERE DRIVER_ID=:OLD_DRIVER_ID;

END

--

/* Создание процедуры удаления водителя */

CREATE OR ALTER PROCEDURE /*PREFIX*/D_DRIVER (
  OLD_DRIVER_ID VARCHAR(32))
AS
BEGIN
  DELETE FROM /*PREFIX*/DRIVERS
        WHERE DRIVER_ID=:OLD_DRIVER_ID;

  DELETE FROM /*PREFIX*/ACCOUNT_ROLES
        WHERE ACCOUNT_ID=:OLD_DRIVER_ID;

  DELETE FROM /*PRFEIX*/ACCOUNTS
        WHERE ACCOUNT_ID=:OLD_DRIVER_ID;
END;

--

/* Фиксация изменений */

COMMIT