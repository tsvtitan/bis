/* Создание процедуры получения билетов по линии */

CREATE OR ALTER PROCEDURE GET_TICKET_LINE
(
  TIRAGE_ID VARCHAR(32),
  ROUND_NUM INTEGER,
  LINE_NUM INTEGER,
  SUBROUND_ID VARCHAR(32)
)
RETURNS
(
  TICKET_ID VARCHAR(32),
  LOTTERY_ID VARCHAR(32)
--  ,SQL VARCHAR(8000)
)
AS
  DECLARE SQL VARCHAR(8000);
  DECLARE S VARCHAR(1000);
  DECLARE F VARCHAR(10);
  DECLARE FN VARCHAR(15);
  DECLARE I INTEGER;
  DECLARE BARREL_NUM VARCHAR(2);
BEGIN

  F='G2_'||CAST(LINE_NUM AS VARCHAR(10));

  SQL='SELECT TICKET_ID FROM /*PREFIX*/TICKETS '||
      ' WHERE TIRAGE_ID='''||TIRAGE_ID||''' AND USED=1 ';

  S='';

  FOR SELECT L.LOTTERY_ID, L.BARREL_NUM
        FROM /*PREFIX*/LOTTERY L
        LEFT JOIN /*PREFIX*/SUBROUNDS S ON S.SUBROUND_ID=L.SUBROUND_ID
       WHERE L.TIRAGE_ID=:TIRAGE_ID
         AND L.ROUND_NUM<=:ROUND_NUM
         AND (L.SUBROUND_ID IN (SELECT SUBROUND_ID FROM GET_SUBROUNDS(:SUBROUND_ID)) OR
              L.SUBROUND_ID=:SUBROUND_ID OR
              L.SUBROUND_ID IS NULL)
       ORDER BY L.ROUND_NUM, S.PRIORITY, L.PRIORITY
        INTO :LOTTERY_ID, :BARREL_NUM DO BEGIN

    IF (S='') THEN BEGIN
      S=''''||BARREL_NUM||'''';
    END ELSE BEGIN
      S=S||','''||BARREL_NUM||'''';
    END

  END

  IF (S<>'') THEN BEGIN

    SQL=SQL||'AND (';
    I=1;
    WHILE (I<6) DO BEGIN
      FN=F||CAST(I AS VARCHAR(1));
--      SQL=SQL||'('||FN||' IN ('||S||') OR '||FN||' IS NULL)';
      SQL=SQL||FN||' IN ('||S||')';
      IF (I<5) THEN BEGIN
        SQL=SQL||' AND ';
      END
      I=I+1;
    END
    SQL=SQL||')';

    FOR EXECUTE STATEMENT SQL
                     INTO :TICKET_ID DO BEGIN
      SUSPEND;
    END

  END

END

--

/* Фиксация изменений */

COMMIT