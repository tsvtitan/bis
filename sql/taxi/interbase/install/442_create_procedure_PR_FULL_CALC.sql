/* Создание процедуры обработки результата полный расчет */

CREATE PROCEDURE /*PREFIX*/PR_FULL_CALC
(
  ORDER_ID VARCHAR(32),
  ACCOUNT_ID VARCHAR(32)
)
AS
  DECLARE COST_RATE NUMERIC(15,2);
  DECLARE COST_FACT NUMERIC(15,2);
  DECLARE PHONE VARCHAR(100);
  DECLARE DRIVER_ID VARCHAR(32);
  DECLARE RECIPIENT_ID VARCHAR(32);
  DECLARE SUM_CHARGE NUMERIC(15,2);
  DECLARE SUM_RECEIPT NUMERIC(15,2);
  DECLARE BALANCE NUMERIC(15,2);
  DECLARE MIN_BALANCE NUMERIC(15,2);
  DECLARE CHARGE_TYPE_ID VARCHAR(32);
  DECLARE S VARCHAR(1000);
BEGIN

  SELECT PHONE, DRIVER_ID, COST_RATE, COST_FACT
    FROM /*PREFIX*/ORDERS
   WHERE ORDER_ID=:ORDER_ID
    INTO :PHONE, :DRIVER_ID, :COST_RATE, :COST_FACT;

  IF (COST_FACT IS NULL) THEN
    COST_FACT=:COST_RATE;

  UPDATE /*PREFIX*/ORDERS
     SET FINISHED=1,
         DATE_END=CURRENT_TIMESTAMP,
         WHO_PROCESS_ID=:ACCOUNT_ID,
         COST_FACT=:COST_FACT
   WHERE ORDER_ID=:ORDER_ID;

  IF (DRIVER_ID IS NOT NULL) THEN BEGIN

    IF (PHONE IS NOT NULL) THEN BEGIN

      IF (SUBSTR(PHONE,1,3)='+79')  THEN BEGIN

        RECIPIENT_ID=NULL;

        FOR SELECT ACCOUNT_ID
              FROM /*PREFIX*/ACCOUNTS
             WHERE PHONE=:PHONE
              INTO :RECIPIENT_ID DO BEGIN

          IF (RECIPIENT_ID IS NOT NULL) THEN
            BREAK;
        END

        S='Спасибо что воспользовались нашими услугами';

        INSERT INTO /*PREFIX*/OUT_MESSAGES (OUT_MESSAGE_ID,CREATOR_ID,RECIPIENT_ID,DATE_CREATE,
                                            TEXT_OUT,DATE_OUT,TYPE_MESSAGE,CONTACT,DESCRIPTION,PRIORITY,LOCKED)
                                    VALUES (/*PREFIX*/GET_UNIQUE_ID(),:ACCOUNT_ID,:RECIPIENT_ID,CURRENT_TIMESTAMP,
                                            :S,NULL,0,:PHONE,NULL,2,NULL);
      END

    END

    CHARGE_TYPE_ID='E1BC9789DA9DB2B041C0784EBE92BFC9'; /* Выполнение заказа */

    SELECT RET_SUM
      FROM /*PREFIX*/GET_DRIVER_SUM(:DRIVER_ID,:COST_FACT)
      INTO :SUM_CHARGE;

    INSERT INTO /*PREFIX*/CHARGES (CHARGE_ID,WHO_CREATE_ID,CHARGE_TYPE_ID,ACCOUNT_ID,
                                   SUM_CHARGE,DATE_CHARGE,DATE_CREATE,DESCRIPTION)
                           VALUES (/*PREFIX*/GET_UNIQUE_ID(),:ACCOUNT_ID,:CHARGE_TYPE_ID,:DRIVER_ID,
                                   :SUM_CHARGE,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,NULL);

    SELECT (CASE WHEN SUM(SUM_CHARGE) IS NULL THEN 0.0 ELSE SUM(SUM_CHARGE) END)
      FROM /*PREFIX*/CHARGES
     WHERE ACCOUNT_ID=:DRIVER_ID
      INTO :SUM_CHARGE;

    SELECT (CASE WHEN SUM(SUM_RECEIPT) IS NULL THEN 0.0 ELSE SUM(SUM_RECEIPT) END)
      FROM /*PREFIX*/RECEIPTS
     WHERE ACCOUNT_ID=:DRIVER_ID
      INTO :SUM_RECEIPT;

    BALANCE=SUM_RECEIPT-SUM_CHARGE;

    SELECT MIN_BALANCE
      FROM /*PREFIX*/DRIVERS
     WHERE DRIVER_ID=:DRIVER_ID
      INTO :MIN_BALANCE;

    IF ((MIN_BALANCE IS NULL) OR ((MIN_BALANCE IS NOT NULL) AND (BALANCE>MIN_BALANCE))) THEN BEGIN 

      S='Заказ завершен. Баланс = '||CAST(BALANCE AS VARCHAR(30))||' р.';

    END ELSE BEGIN

      UPDATE /*PREFIX*/SHIFTS
         SET DATE_END=CURRENT_TIMESTAMP
       WHERE ACCOUNT_ID=:DRIVER_ID
         AND DATE_END IS NULL;

      S='Заказ завершен. Вы сняты со смены. Баланс = '||CAST(BALANCE AS VARCHAR(30))||' р.';

    END

    SELECT PHONE
      FROM /*PREFIX*/ACCOUNTS
     WHERE ACCOUNT_ID=:DRIVER_ID
      INTO :PHONE;

    INSERT INTO /*PREFIX*/OUT_MESSAGES (OUT_MESSAGE_ID,CREATOR_ID,RECIPIENT_ID,DATE_CREATE,
                                        TEXT_OUT,DATE_OUT,TYPE_MESSAGE,CONTACT,DESCRIPTION,PRIORITY,LOCKED)
                                VALUES (/*PREFIX*/GET_UNIQUE_ID(),:ACCOUNT_ID,:RECIPIENT_ID,CURRENT_TIMESTAMP,
                                        :S,NULL,0,:PHONE,NULL,2,NULL);

  END
END

--

/* Фиксация изменений */

COMMIT