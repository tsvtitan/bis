CREATE INDEX IDX_OUT_MESSAGES_LOCKED
ON OUT_MESSAGES (LOCKED)

--

CREATE OR ALTER PROCEDURE GET_CALL_SESSIONS
(
  CALL_ID VARCHAR(32)
)
RETURNS (
    SESSION_ID VARCHAR(32),
    ACCOUNT_ID VARCHAR(32))
AS
DECLARE DIRECTION INTEGER;
DECLARE APPLICATION_ID VARCHAR(32) = 'A35F5701A7AA920E40812A71A690910D';
DECLARE FIRM_ID VARCHAR(32);
DECLARE PARAMS BLOB SUB_TYPE 0 SEGMENT SIZE 80;
DECLARE ENABLED INTEGER;
DECLARE CALLER_ID VARCHAR(32);
DECLARE CALL_CNT INTEGER;
DECLARE CNT INTEGER;
DECLARE IP VARCHAR(100);
BEGIN

  SELECT DIRECTION, FIRM_ID, CALLER_ID
    FROM CALLS
   WHERE CALL_ID=:CALL_ID
    INTO :DIRECTION, :FIRM_ID, :CALLER_ID;

  IF (DIRECTION IS NOT NULL) THEN BEGIN

    IF (DIRECTION=0) THEN BEGIN

      SELECT COUNT(*)
        FROM SHIFTS S
        JOIN ACCOUNTS A ON A.ACCOUNT_ID=S.ACCOUNT_ID
        JOIN DRIVERS D ON D.DRIVER_ID=S.ACCOUNT_ID
       WHERE D.DRIVER_ID=:CALLER_ID
         AND A.LOCKED<>1
         AND S.DATE_END IS NULL
        INTO :CNT;

      FOR SELECT GS.SESSION_ID, GS.ACCOUNT_ID, S.PARAMS
            FROM GET_EVENT_SESSIONS(1,:APPLICATION_ID,NULL,NULL) GS
            JOIN DISPATCHERS D ON D.DISPATCHER_ID=GS.ACCOUNT_ID
            JOIN ACCOUNTS A ON A.ACCOUNT_ID=D.DISPATCHER_ID
            JOIN SESSIONS S ON S.SESSION_ID=GS.SESSION_ID
           WHERE A.FIRM_ID=:FIRM_ID
           UNION ALL
          SELECT GS.SESSION_ID, GS.ACCOUNT_ID, S.PARAMS
            FROM GET_EVENT_SESSIONS(1,:APPLICATION_ID,NULL,NULL) GS
            JOIN DISPATCHERS D ON D.DISPATCHER_ID=GS.ACCOUNT_ID
            JOIN ACCOUNTS A ON A.ACCOUNT_ID=D.DISPATCHER_ID
            JOIN SESSIONS S ON S.SESSION_ID=GS.SESSION_ID
           WHERE A.FIRM_ID<>:FIRM_ID
           UNION ALL
          SELECT GS.SESSION_ID, GS.ACCOUNT_ID, S.PARAMS
            FROM GET_EVENT_SESSIONS(1,:APPLICATION_ID,NULL,NULL) GS
            JOIN DISPATCHERS D ON D.DISPATCHER_ID=GS.ACCOUNT_ID
            JOIN ACCOUNTS A ON A.ACCOUNT_ID=D.DISPATCHER_ID
            JOIN SESSIONS S ON S.SESSION_ID=GS.SESSION_ID
           WHERE A.FIRM_ID IS NULL
            INTO :SESSION_ID, :ACCOUNT_ID, :PARAMS DO BEGIN

        ENABLED=CAST(CONFIG_READ(PARAMS,'TaxiPhoneForm','Enabled','0') AS INTEGER);

        IF (ENABLED=1) THEN BEGIN

          IF (CNT>0) THEN BEGIN
            IP=CAST(CONFIG_READ(PARAMS,'DefaultUdpEventServer','IP','') AS VARCHAR(100));
            IF (TRIM(IP)<>'192.168.0.33') THEN
              ENABLED=0;
          END

          IF (ENABLED=1) THEN
            SUSPEND;
        END

      END

    END

  END

END

--

