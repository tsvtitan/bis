unit BisImportMainFm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, BisImportFm, Menus, ActnPopup, DB, ImgList, ActnList, ComCtrls,
  Grids, DBGrids, ExtCtrls, StdCtrls, ToolWin;

type
  TBisImportMainForm = class(TBisImportForm)
    procedure FormShow(Sender: TObject);
    procedure TimerExecuteTimer(Sender: TObject);
  private
//    FImportFileName: String;
  protected
    procedure AfterImport(Success: Boolean); override;
  public
    constructor Create(AOwner: TComponent); override;
    function CanShow: Boolean; override;
  end;

  TBisImportMainFormIface=class(TBisImportFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

var
  BisImportMainForm: TBisImportMainForm;

implementation

{$R *.dfm}

uses BisDialogs, BisCore, BisUtils;

{ TBisImportMainFormIface }

constructor TBisImportMainFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FormClass:=TBisImportMainForm;
  ApplicationCreateForm:=true;
  AutoShow:=true;
  Available:=false;
  Permissions.Enabled:=false;
  OnlyOneForm:=true;
end;

{ TBisImportMainForm }

constructor TBisImportMainForm.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);


{  ActionLoad.Visible:=false;
  ToolBarExport.Width:=ToolButtonExport.Width*2+2;
  ToolBarConnections.Left:=ToolBarExport.Left+ToolBarExport.Width+1;

  FAutoImport:=ConfigRead('AutoImport',false);
  FImportFileName:=PrepareFileNameByPath(Core.CmdLine,ConfigRead('FileName',''));
  if FileExists(FImportFileName) then
    LoadFromFile(FImportFileName);
 }
end;

procedure TBisImportMainForm.FormShow(Sender: TObject);
begin
//  TimerExecute.Enabled:=true;
end;

procedure TBisImportMainForm.TimerExecuteTimer(Sender: TObject);
begin
{  TimerExecute.Enabled:=false;
  if FAutoImport then
    ActionImport.Execute;}
end;

function TBisImportMainForm.CanShow: Boolean;
begin
  Result:=false;
end;

end.
