DROP PROCEDURE /*PREFIX*/R_OBJECT_PRESENTATION

CREATE PROCEDURE /*PREFIX*/R_OBJECT_PRESENTATION
(
  IN PRESENTATION_ID VARCHAR(32),
  IN OBJECT_ID VARCHAR(32),
  IN PUBLISHING_ID VARCHAR(32),
  IN PUBLISHING_NAME VARCHAR(100),
  IN VIEW_ID VARCHAR(32),
  IN VIEW_NAME VARCHAR(100),
  IN TYPE_ID VARCHAR(32),
  IN TYPE_NAME VARCHAR(100),
  IN OPERATION_ID VARCHAR(32),
  IN OPERATION_NAME VARCHAR(100),
  IN DATE_BEGIN DATETIME,
  IN ACCOUNT_ID VARCHAR(32),
  IN USER_NAME VARCHAR(100),
  IN PHONE VARCHAR(100),
  IN STATUS INTEGER
)
BEGIN
  DECLARE ATABLE VARCHAR(100);
	DECLARE APHONE VARCHAR(100);
  DECLARE COLUMN_ID VARCHAR(32);
  DECLARE COLUMN_NAME VARCHAR(100);
  DECLARE OLD_COLUMN_ID VARCHAR(32);
  DECLARE PARAM_ID VARCHAR(32);
  DECLARE PARAM_TYPE INTEGER;
  DECLARE PARAM_COUNT INTEGER;
  DECLARE REAL_COUNT INTEGER;
  DECLARE CP_STRING_BEFORE VARCHAR(100);
  DECLARE CP_STRING_AFTER VARCHAR(100);
  DECLARE CP_USE_STRING_BEFORE INTEGER;
  DECLARE CP_USE_STRING_AFTER INTEGER;
  DECLARE PARAM_VALUE VARCHAR(250);
  DECLARE FIELD_VALUE VARCHAR(1000);
  DECLARE FIELD_NAMES VARCHAR(2000);
  DECLARE FIELD_VALUES VARCHAR(2000);
  DECLARE VALUE BLOB;
  DECLARE ALL_COUNT INTEGER;
  DECLARE DONE INTEGER DEFAULT 0;
  DECLARE C1 CURSOR FOR SELECT PC.COLUMN_ID, C.NAME, CP.PARAM_ID, P.PARAM_TYPE,
                               CP.STRING_BEFORE AS CP_STRING_BEFORE, CP.STRING_AFTER AS CP_STRING_AFTER,
                               CP.USE_STRING_BEFORE AS CP_USE_STRING_BEFORE, CP.USE_STRING_AFTER AS CP_USE_STRING_AFTER,
                               (SELECT COUNT(*) FROM /*PREFIX*/COLUMN_PARAMS CP1 WHERE CP1.COLUMN_ID=CP.COLUMN_ID) AS PARAM_COUNT
                          FROM /*PREFIX*/PRESENTATION_COLUMNS PC
                          JOIN /*PREFIX*/COLUMNS C ON C.COLUMN_ID=PC.COLUMN_ID
                          JOIN /*PREFIX*/COLUMN_PARAMS CP ON CP.COLUMN_ID=C.COLUMN_ID
                          JOIN /*PREFIX*/PARAMS P ON P.PARAM_ID=CP.PARAM_ID
	                        JOIN /*PREFIX*/PRESENTATIONS PR ON PR.PRESENTATION_ID=PC.PRESENTATION_ID
 	                       WHERE PC.PRESENTATION_ID=PRESENTATION_ID
                         ORDER BY PC.PRIORITY, CP.PRIORITY;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE=1;												
	
  SELECT P.TABLE_NAME INTO ATABLE
    FROM /*PREFIX*/PRESENTATIONS P
   WHERE P.PRESENTATION_ID=PRESENTATION_ID;
	   
  IF (ATABLE<>'') THEN
  
    SET @QUERY=CONCAT('DELETE FROM /*PREFIX*/',ATABLE,' WHERE OBJECT_ID=''',OBJECT_ID,''' ',
	              'AND PUBLISHING_ID=''',PUBLISHING_ID,'''');
    PREPARE STMT FROM @QUERY;
    EXECUTE STMT;
    DEALLOCATE PREPARE STMT; 
	
	  IF (STATUS IN (0,1))  THEN
		
      SET OLD_COLUMN_ID='';
		
		  IF (PHONE IS NULL) THEN
  		  SET APHONE='';
	  	ELSE
		    SET APHONE=PHONE;
		  END IF;
		
      SET FIELD_NAMES=CONCAT('OBJECT_ID, PUBLISHING_ID, PUBLISHING_NAME, VIEW_ID, TYPE_ID, ',
	                           'OPERATION_ID, VIEW_NAME, TYPE_NAME, OPERATION_NAME, DATE_BEGIN, ',
	                      	   'ACCOUNT_ID, USER_NAME, PHONE, STATUS ');
      SET FIELD_VALUES=CONCAT('''',OBJECT_ID,''',''',PUBLISHING_ID,''',''',PUBLISHING_NAME,''',''',VIEW_ID,''',''',TYPE_ID,
		                          ''',''',OPERATION_ID,''',''',VIEW_NAME,''',''',TYPE_NAME,''',''',OPERATION_NAME,''',''',DATE_BEGIN,
			                        ''',''',ACCOUNT_ID,''',''',USER_NAME,''',''',APHONE,''',''',STATUS,'''');
      SET REAL_COUNT=0;
      SET ALL_COUNT=0;
		
		
      OPEN C1;
      FETCH C1 INTO COLUMN_ID,COLUMN_NAME,PARAM_ID,PARAM_TYPE,
	                  CP_STRING_BEFORE,CP_STRING_AFTER,CP_USE_STRING_BEFORE,CP_USE_STRING_AFTER,
	                  PARAM_COUNT;
      WHILE NOT DONE DO

        IF (OLD_COLUMN_ID<>COLUMN_ID) THEN
          SET REAL_COUNT=0;
        END IF;
		
        SET REAL_COUNT=REAL_COUNT+1;
		
        IF (CP_STRING_BEFORE IS NULL) THEN
	        SET CP_STRING_BEFORE='';
        END IF;
			
        IF (CP_STRING_AFTER IS NULL) THEN
	        SET CP_STRING_AFTER='';
        END IF;

        IF (CP_USE_STRING_BEFORE IS NULL) THEN
          SET CP_USE_STRING_BEFORE=0;
        END IF;
			
        IF (CP_USE_STRING_AFTER IS NULL) THEN
          SET CP_USE_STRING_AFTER=0;
        END IF;

        SET PARAM_VALUE='';
      
        CALL GET_OBJECT_PARAM_VALUE(OBJECT_ID,PARAM_ID,VALUE);
			
        IF (VALUE IS NULL) THEN
	        SET PARAM_VALUE='';
        ELSE
          SET PARAM_VALUE=SUBSTR(CONVERT(VALUE USING cp1251),1,250);
        END IF;

        IF (CP_USE_STRING_BEFORE=1) THEN
          SET PARAM_VALUE=CONCAT(CP_STRING_BEFORE,PARAM_VALUE);
        END IF;
			
        IF (CP_USE_STRING_AFTER=1) THEN
	        SET PARAM_VALUE=CONCAT(PARAM_VALUE,CP_STRING_AFTER);
        END IF;
      
        IF (REAL_COUNT=1) THEN
	        SET FIELD_VALUE=PARAM_VALUE;
        ELSE
	        SET FIELD_VALUE=CONCAT(FIELD_VALUE,PARAM_VALUE);
        END IF;
						
        IF (REAL_COUNT=PARAM_COUNT) THEN
	        SET FIELD_NAMES=CONCAT(FIELD_NAMES,', `',COLUMN_NAME,'`');
          SET FIELD_VALUES=CONCAT(FIELD_VALUES,', ''',FIELD_VALUE,'''');
        END IF;	
						
        SET OLD_COLUMN_ID=COLUMN_ID;
			
        SET ALL_COUNT=ALL_COUNT+1;
			
        FETCH C1 INTO COLUMN_ID,COLUMN_NAME,PARAM_ID,PARAM_TYPE,
	                    CP_STRING_BEFORE,CP_STRING_AFTER,CP_USE_STRING_BEFORE,CP_USE_STRING_AFTER,
	                    PARAM_COUNT;
      END WHILE;
      CLOSE C1;
		
      SET @QUERY=CONCAT('INSERT /*PREFIX*/',ATABLE,' (',FIELD_NAMES,') VALUES (',FIELD_VALUES,')');
  	  PREPARE STMT FROM @QUERY;
      EXECUTE STMT;
      DEALLOCATE PREPARE STMT; 		
		
    END IF;
  END IF;
END;