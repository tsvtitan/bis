/* Создание процедуры проверки истории должника */

CREATE PROCEDURE /*PREFIX*/HISTORY_EXISTS
  @DEBTOR_ID VARCHAR(32)
AS
BEGIN
  DECLARE @DEBTOR_TYPE INTEGER,
          @SURNAME VARCHAR(100),
          @NAME VARCHAR(100),
          @PATRONYMIC VARCHAR(100),
          @PASSPORT VARCHAR(250),
          @SEX INTEGER,
          @DATE_BIRTH DATETIME,
          @PLACE_BIRTH VARCHAR(250), 
          @ADDRESS_RESIDENCE VARCHAR(250),
          @INDEX_RESIDENCE VARCHAR(10),
          @ADDRESS_ACTUAL VARCHAR(250),
          @INDEX_ACTUAL VARCHAR(10),
          @ADDRESS_ADDITIONAL VARCHAR(250),
          @INDEX_ADDITIONAL VARCHAR(10),
          @JOB_TITLE VARCHAR(250),
          @PLACE_WORK VARCHAR(250),
          @ADDRESS_WORK VARCHAR(250),
          @INDEX_WORK VARCHAR(10),
          @PHONE_HOME VARCHAR(20),
          @PHONE_WORK VARCHAR(20),
          @PHONE_MOBILE VARCHAR(20),
          @PHONE_OTHER1 VARCHAR(20),
          @PHONE_OTHER2 VARCHAR(20),
          @FOUNDERS VARCHAR(8000);

  DECLARE @_DEBTOR_TYPE INTEGER,
          @_SURNAME INTEGER,
          @_NAME INTEGER,
          @_PATRONYMIC INTEGER,
          @_PASSPORT INTEGER,
          @_SEX INTEGER,
          @_DATE_BIRTH INTEGER,
          @_PLACE_BIRTH INTEGER, 
          @_ADDRESS_RESIDENCE INTEGER,
          @_INDEX_RESIDENCE INTEGER,
          @_ADDRESS_ACTUAL INTEGER,
          @_INDEX_ACTUAL INTEGER,
          @_ADDRESS_ADDITIONAL INTEGER,
          @_INDEX_ADDITIONAL INTEGER,
          @_JOB_TITLE INTEGER,
          @_PLACE_WORK INTEGER,
          @_ADDRESS_WORK INTEGER,
          @_INDEX_WORK INTEGER,
          @_PHONE_HOME INTEGER,
          @_PHONE_WORK INTEGER,
          @_PHONE_MOBILE INTEGER,
          @_PHONE_OTHER1 INTEGER,
          @_PHONE_OTHER2 INTEGER,
          @_FOUNDERS INTEGER;
  
  SET NOCOUNT ON;

  SELECT @DEBTOR_TYPE=DEBTOR_TYPE,
         @SURNAME=SURNAME,
         @NAME=NAME,
         @PATRONYMIC=PATRONYMIC,
         @PASSPORT=PASSPORT,
         @SEX=SEX,
         @DATE_BIRTH=DATE_BIRTH,
         @PLACE_BIRTH=PLACE_BIRTH, 
         @ADDRESS_RESIDENCE=ADDRESS_RESIDENCE,
         @INDEX_RESIDENCE=INDEX_RESIDENCE,
         @ADDRESS_ACTUAL=ADDRESS_ACTUAL,
         @INDEX_ACTUAL=INDEX_ACTUAL,
         @ADDRESS_ADDITIONAL=ADDRESS_ADDITIONAL,
         @INDEX_ADDITIONAL=INDEX_ADDITIONAL,
         @JOB_TITLE=JOB_TITLE,
         @PLACE_WORK=PLACE_WORK,
         @ADDRESS_WORK=ADDRESS_WORK,
         @INDEX_WORK=INDEX_WORK,
         @PHONE_HOME=PHONE_HOME,
         @PHONE_WORK=PHONE_WORK,
         @PHONE_MOBILE=PHONE_MOBILE,
         @PHONE_OTHER1=PHONE_OTHER1,
         @PHONE_OTHER2=PHONE_OTHER2,
         @FOUNDERS=SUBSTRING(FOUNDERS,1,8000) 
    FROM /*PREFIX*/DEBTORS WHERE DEBTOR_ID=@DEBTOR_ID;

  
  SELECT @_DEBTOR_TYPE=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND DEBTOR_TYPE IS NOT NULL AND DEBTOR_TYPE<>@DEBTOR_TYPE;

  SELECT @_SURNAME=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND SURNAME IS NOT NULL 
     AND LTRIM(RTRIM(SURNAME))<>''
     AND SURNAME<>@SURNAME;

  SELECT @_NAME=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND NAME IS NOT NULL 
     AND LTRIM(RTRIM(NAME))<>''
     AND NAME<>@NAME;

  SELECT @_PATRONYMIC=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PATRONYMIC IS NOT NULL 
     AND LTRIM(RTRIM(PATRONYMIC))<>''
     AND PATRONYMIC<>@PATRONYMIC;

  SELECT @_PASSPORT=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PASSPORT IS NOT NULL 
     AND LTRIM(RTRIM(PASSPORT))<>''
     AND PASSPORT<>@PASSPORT;

  SELECT @_SEX=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND SEX IS NOT NULL AND SEX<>@SEX;

  SELECT @_DATE_BIRTH=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND DATE_BIRTH IS NOT NULL AND DATE_BIRTH<>@DATE_BIRTH;

  SELECT @_PLACE_BIRTH=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PLACE_BIRTH IS NOT NULL 
     AND LTRIM(RTRIM(PLACE_BIRTH))<>''
     AND PLACE_BIRTH<>@PLACE_BIRTH;

  SELECT @_ADDRESS_RESIDENCE=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND ADDRESS_RESIDENCE IS NOT NULL 
     AND LTRIM(RTRIM(ADDRESS_RESIDENCE))<>''
     AND ADDRESS_RESIDENCE<>@ADDRESS_RESIDENCE;

  SELECT @_INDEX_RESIDENCE=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND INDEX_RESIDENCE IS NOT NULL 
     AND LTRIM(RTRIM(INDEX_RESIDENCE))<>''
     AND INDEX_RESIDENCE<>@INDEX_RESIDENCE;

  SELECT @_ADDRESS_ACTUAL=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND ADDRESS_ACTUAL IS NOT NULL 
     AND LTRIM(RTRIM(ADDRESS_ACTUAL))<>''
     AND ADDRESS_ACTUAL<>@ADDRESS_ACTUAL;

  SELECT @_INDEX_ACTUAL=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND INDEX_ACTUAL IS NOT NULL 
     AND LTRIM(RTRIM(INDEX_ACTUAL))<>''
     AND INDEX_ACTUAL<>@INDEX_ACTUAL;

  SELECT @_ADDRESS_ADDITIONAL=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND ADDRESS_ADDITIONAL IS NOT NULL 
     AND LTRIM(RTRIM(ADDRESS_ADDITIONAL))<>''
     AND ADDRESS_ADDITIONAL<>@ADDRESS_ADDITIONAL;

  SELECT @_INDEX_ADDITIONAL=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND INDEX_ADDITIONAL IS NOT NULL 
     AND LTRIM(RTRIM(INDEX_ADDITIONAL))<>''
     AND INDEX_ADDITIONAL<>@INDEX_ADDITIONAL;

  SELECT @_JOB_TITLE=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND JOB_TITLE IS NOT NULL 
     AND LTRIM(RTRIM(JOB_TITLE))<>''
     AND JOB_TITLE<>@JOB_TITLE;

  SELECT @_PLACE_WORK=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PLACE_WORK IS NOT NULL 
     AND LTRIM(RTRIM(PLACE_WORK))<>''
     AND PLACE_WORK<>@PLACE_WORK;

  SELECT @_ADDRESS_WORK=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND ADDRESS_WORK IS NOT NULL 
     AND LTRIM(RTRIM(ADDRESS_WORK))<>''
     AND ADDRESS_WORK<>@ADDRESS_WORK;

  SELECT @_INDEX_WORK=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND INDEX_WORK IS NOT NULL 
     AND LTRIM(RTRIM(INDEX_WORK))<>''
     AND INDEX_WORK<>@INDEX_WORK;

  SELECT @_PHONE_HOME=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PHONE_HOME IS NOT NULL 
     AND LTRIM(RTRIM(PHONE_HOME))<>''
     AND PHONE_HOME<>@PHONE_HOME;

  SELECT @_PHONE_WORK=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PHONE_WORK IS NOT NULL 
     AND LTRIM(RTRIM(PHONE_WORK))<>''
     AND PHONE_WORK<>@PHONE_WORK;

  SELECT @_PHONE_MOBILE=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PHONE_MOBILE IS NOT NULL 
     AND LTRIM(RTRIM(PHONE_MOBILE))<>''
     AND PHONE_MOBILE<>@PHONE_MOBILE;

  SELECT @_PHONE_OTHER1=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PHONE_OTHER1 IS NOT NULL 
     AND LTRIM(RTRIM(PHONE_OTHER1))<>''
     AND PHONE_OTHER1<>@PHONE_OTHER1;

  SELECT @_PHONE_OTHER2=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND PHONE_OTHER2 IS NOT NULL 
     AND LTRIM(RTRIM(PHONE_OTHER2))<>''
     AND PHONE_OTHER2<>@PHONE_OTHER2;

  SELECT @_FOUNDERS=COUNT(*) FROM /*PREFIX*/HISTORIES 
   WHERE DEBTOR_ID=@DEBTOR_ID
     AND FOUNDERS IS NOT NULL 
     AND LTRIM(RTRIM(SUBSTRING(FOUNDERS,1,8000)))<>''
     AND SUBSTRING(FOUNDERS,1,8000)<>@FOUNDERS;

  SET NOCOUNT OFF;

  SELECT @_DEBTOR_TYPE AS DEBTOR_TYPE,
         @_SURNAME AS SURNAME,
         @_NAME AS NAME,
         @_PATRONYMIC AS PATRONYMIC,
         @_PASSPORT AS PASSPORT,
         @_SEX AS SEX,
         @_DATE_BIRTH AS DATE_BIRTH,
         @_PLACE_BIRTH AS PLACE_BIRTH,
         @_ADDRESS_RESIDENCE AS ADDRESS_RESIDENCE,
         @_INDEX_RESIDENCE AS INDEX_RESIDENCE,
         @_ADDRESS_ACTUAL AS ADDRESS_ACTUAL,
         @_INDEX_ACTUAL AS INDEX_ACTUAL,
         @_ADDRESS_ADDITIONAL AS ADDRESS_ADDITIONAL,
         @_INDEX_ADDITIONAL AS INDEX_ADDITIONAL,
         @_JOB_TITLE AS JOB_TITLE,
         @_PLACE_WORK AS PLACE_WORK,
         @_ADDRESS_WORK AS ADDRESS_WORK,
         @_INDEX_WORK AS INDEX_WORK,
         @_PHONE_HOME AS PHONE_HOME,
         @_PHONE_WORK AS PHONE_WORK,
         @_PHONE_MOBILE AS PHONE_MOBILE,
         @_PHONE_OTHER1 AS PHONE_OTHER1,
         @_PHONE_OTHER2 AS PHONE_OTHER2,
         @_FOUNDERS AS FOUNDERS;

END;

--
