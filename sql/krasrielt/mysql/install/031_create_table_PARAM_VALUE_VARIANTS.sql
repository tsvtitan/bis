/* Создание таблицы вариантов значений */

CREATE TABLE /*PREFIX*/PARAM_VALUE_VARIANTS
(
  PARAM_VALUE_ID VARCHAR(32) NOT NULL,
  VALUE VARCHAR(100) NOT NULL,
	PRIORITY INTEGER NOT NULL,
  PRIMARY KEY (PARAM_VALUE_ID,VALUE),
  FOREIGN KEY (PARAM_VALUE_ID) REFERENCES PARAM_VALUES (PARAM_VALUE_ID)
)

--

/* Создание просмотра таблицы вариантов значений */

CREATE VIEW /*PREFIX*/S_PARAM_VALUE_VARIANTS
AS
SELECT PVV.*,
			 PV.NAME AS PARAM_VALUE_NAME,
			 PV.PARAM_ID,
			 PV.DESCRIPTION AS PARAM_VALUE_DESCRIPTION
  FROM /*PREFIX*/PARAM_VALUE_VARIANTS PVV
	JOIN /*PREFIX*/PARAM_VALUES PV ON PV.PARAM_VALUE_ID=PVV.PARAM_VALUE_ID
 ORDER BY PV.PARAM_ID, PV.PRIORITY, PVV.PRIORITY	
	
--

/* Создание процедуры добавления варианта значению */

CREATE PROCEDURE /*PREFIX*/I_PARAM_VALUE_VARIANT
(
  IN PARAM_VALUE_ID VARCHAR(32),
  IN VALUE VARCHAR(100),
  IN PRIORITY INTEGER
)
BEGIN
  INSERT INTO /*PREFIX*/PARAM_VALUE_VARIANTS (PARAM_VALUE_ID,VALUE,PRIORITY)
       VALUES (PARAM_VALUE_ID,VALUE,PRIORITY);
END;

--

/* Создание процедуры изменения варианта у значения */

CREATE PROCEDURE /*PREFIX*/U_PARAM_VALUE_VARIANT
(
  IN PARAM_VALUE_ID VARCHAR(32),
  IN VALUE VARCHAR(100),
  IN PRIORITY INTEGER,
	IN OLD_PARAM_VALUE_ID VARCHAR(32),
  IN OLD_VALUE VARCHAR(100)
)
BEGIN
  UPDATE /*PREFIX*/PARAM_VALUE_VARIANTS PVV
     SET PVV.PARAM_VALUE_ID=PARAM_VALUE_ID,
		     PVV.VALUE=VALUE,
         PVV.PRIORITY=PRIORITY
   WHERE PVV.PARAM_VALUE_ID=OLD_PARAM_VALUE_ID
	   AND PVV.VALUE=OLD_VALUE;
END;

--

/* Создание процедуры удаления варианта у значения */

CREATE PROCEDURE /*PREFIX*/D_PARAM_VALUE_VARIANT
(
  IN OLD_PARAM_VALUE_ID VARCHAR(32)
)
BEGIN
  DELETE FROM /*PREFIX*/PARAM_VALUE_VARIANTS 
        WHERE PARAM_VALUE_ID=OLD_PARAM_VALUE_ID;
END;

--
