unit BisTaxiDataDriverTypeEditFm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls, ImgList,
  BisDataEditFm, BisParam, BisControls;

type
  TBisTaxiDataDriverTypeEditForm = class(TBisDataEditForm)
    LabelName: TLabel;
    EditName: TEdit;                                                                                  
    LabelDescription: TLabel;
    MemoDescription: TMemo;
    LabelPriority: TLabel;
    EditPriority: TEdit;
    CheckBoxVisible: TCheckBox;
  private
  public
    procedure ChangeParam(Param: TBisParam); override;
  end;

  TBisTaxiDataDiscountTypeEditFormIface=class(TBisDataEditFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

  TBisTaxiDataDiscountTypeFilterFormIface=class(TBisTaxiDataDiscountTypeEditFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

  TBisTaxiDataDiscountTypeInsertFormIface=class(TBisTaxiDataDiscountTypeEditFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

  TBisTaxiDataDiscountTypeUpdateFormIface=class(TBisTaxiDataDiscountTypeEditFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

  TBisTaxiDataDiscountTypeDeleteFormIface=class(TBisTaxiDataDiscountTypeEditFormIface)
  public
    constructor Create(AOwner: TComponent); override;
  end;

var
  BisTaxiDataDriverTypeEditForm: TBisTaxiDataDriverTypeEditForm;

implementation

uses BisUtils;

{$R *.dfm}

{ TBisTaxiDataDiscountTypeEditFormIface }

constructor TBisTaxiDataDiscountTypeEditFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FormClass:=TBisTaxiDataDiscountTypeEditForm;
  with Params do begin
    AddKey('DISCOUNT_TYPE_ID').Older('OLD_DISCOUNT_TYPE_ID');
    AddEdit('NAME','EditName','LabelName',true);
    AddMemo('DESCRIPTION','MemoDescription','LabelDescription');
    AddComboBox('TYPE_CALC','ComboBoxType','LabelType',true);
    AddEdit('PROC_NAME','EditProc','LabelProc');
    AddEditFloat('PERCENT','EditPercent','LabelPercent');
    AddEditFloat('DISCOUNT_SUM','EditSum','LabelSum');
    AddEditInteger('PRIORITY','EditPriority','LabelPriority');
  end;
end;

{ TBisTaxiDataDiscountTypeFilterFormIface }

constructor TBisTaxiDataDiscountTypeFilterFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  Caption:='Фильтр типов дисконтов';
end;

{ TBisTaxiDataDiscountTypeInsertFormIface }

constructor TBisTaxiDataDiscountTypeInsertFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  ProviderName:='I_DISCOUNT_TYPE';
  Caption:='Создать тип скидки';
end;

{ TBisTaxiDataDiscountTypeUpdateFormIface }

constructor TBisTaxiDataDiscountTypeUpdateFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  ProviderName:='U_DISCOUNT_TYPE';
  Caption:='Изменить тип дисконта';
end;

{ TBisTaxiDataDiscountTypeDeleteFormIface }

constructor TBisTaxiDataDiscountTypeDeleteFormIface.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  ProviderName:='D_DISCOUNT_TYPE';
  Caption:='Удалить тип дисконта';
end;

{ TBisTaxiDataDiscountEditForm }

procedure TBisTaxiDataDriverTypeEditForm.ChangeParam(Param: TBisParam);
var
  TypeDiscount: Integer;
begin
  inherited ChangeParam(Param);
  if AnsiSameText(Param.ParamName,'TYPE_CALC') and not VarIsNull(Param.Value) then begin
    TypeDiscount:=VarToIntDef(Param.Value,0);
    Provider.Params.Find('PROC_NAME').Enabled:=false;
    Provider.Params.Find('PERCENT').Enabled:=false;
    Provider.Params.Find('DISCOUNT_SUM').Enabled:=false;
    case TypeDiscount of
      1: Provider.Params.Find('PROC_NAME').Enabled:=not (Mode in [emDelete]);
      2: Provider.Params.Find('PERCENT').Enabled:=not (Mode in [emDelete]);
      3: Provider.Params.Find('DISCOUNT_SUM').Enabled:=not (Mode in [emDelete]);
    end;
  end;
end;

end.
