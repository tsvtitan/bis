--

CREATE VIEW S_ARTICLES
AS
   SELECT A.ARTICLE_ID,
          A.ACCOUNT_ID,
          A.SUBJECT_ID,
          A.DATE_CREATE,
          A.SECTION,
          A.DATE_ARTICLE,
          A.TITLE,
          A.EXCERPT,
          CONVERT(A.ARTICLE_TEXT USING cp1251) ARTICLE_TEXT,
          A.PICTURE,
          A.LINK,
          A1.USER_NAME,
          A1.SURNAME AS ACCOUNT_SURNAME,
          A1.NAME AS ACCOUNT_NAME,
          A1.PATRONYMIC AS ACCOUNT_PATRONYMIC,
          S.NAME AS SUBJECT_NAME
     FROM ARTICLES A
     JOIN ACCOUNTS A1 ON A1.ACCOUNT_ID=A.ACCOUNT_ID
     LEFT JOIN SUBJECTS S ON S.SUBJECT_ID=A.SUBJECT_ID

--

ALTER TABLE ARTICLES
MODIFY SUBJECT_ID VARCHAR(32)

--

ALTER TABLE BANNERS
ADD COUNTER INTEGER

--


DROP VIEW S_BANNERS

--

CREATE VIEW S_BANNERS
AS
   SELECT B.*, 
          A.USER_NAME
     FROM BANNERS B
     LEFT JOIN ACCOUNTS A ON A.ACCOUNT_ID=B.ACCOUNT_ID
DROP PROCEDURE I_BANNER

--

CREATE PROCEDURE I_BANNER
(
  IN BANNER_ID VARCHAR(32),
  IN ACCOUNT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN BANNER_TYPE INTEGER,
  IN VALUE LONGBLOB,
  IN LINK VARCHAR(250),
  IN COUNTER INTEGER
)
BEGIN
  INSERT INTO BANNERS (BANNER_ID,ACCOUNT_ID,NAME,DESCRIPTION,BANNER_TYPE,VALUE,LINK,COUNTER)
       VALUES (BANNER_ID,ACCOUNT_ID,NAME,DESCRIPTION,BANNER_TYPE,VALUE,LINK,COUNTER);
END;

--

DROP PROCEDURE U_BANNER

--

CREATE PROCEDURE U_BANNER
(
  IN BANNER_ID VARCHAR(32),
  IN ACCOUNT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN BANNER_TYPE INTEGER,
  IN VALUE LONGBLOB,
  IN LINK VARCHAR(250),
  IN COUNTER INTEGER,
  IN OLD_BANNER_ID VARCHAR(32)
)
BEGIN
  UPDATE BANNERS B
     SET B.BANNER_ID=BANNER_ID,
         B.ACCOUNT_ID=ACCOUNT_ID,
         B.NAME=NAME,
         B.DESCRIPTION=DESCRIPTION,
	 B.BANNER_TYPE=BANNER_TYPE,
	 B.VALUE=VALUE,
	 B.LINK=LINK,
         B.COUNTER=COUNTER
   WHERE B.BANNER_ID=OLD_BANNER_ID;
END;

--

ALTER TABLE PARAMS
ADD DEFAULT_VALUE VARCHAR(1000)

--

DROP VIEW S_PARAMS

--

CREATE VIEW S_PARAMS
AS
SELECT * FROM PARAMS

--

DROP PROCEDURE I_PARAM

--

CREATE PROCEDURE I_PARAM
(
  IN PARAM_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PARAM_TYPE INTEGER,
  IN MAX_LENGTH INTEGER,
  IN SORTING INTEGER,
  IN LOCKED INTEGER,
  IN DEFAULT_VALUE VARCHAR(1000)
)
BEGIN
  INSERT INTO PARAMS (PARAM_ID,NAME,DESCRIPTION,PARAM_TYPE,MAX_LENGTH,SORTING,LOCKED,DEFAULT_VALUE)
       VALUES (PARAM_ID,NAME,DESCRIPTION,PARAM_TYPE,MAX_LENGTH,SORTING,LOCKED,DEFAULT_VALUE);
END;

--

DROP PROCEDURE U_PARAM

--

DROP PROCEDURE U_PARAM

--

CREATE PROCEDURE U_PARAM
(
  IN PARAM_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PARAM_TYPE INTEGER,
  IN MAX_LENGTH INTEGER,
  IN SORTING INTEGER,
  IN LOCKED INTEGER,
  IN DEFAULT_VALUE VARCHAR(1000),
  IN OLD_PARAM_ID VARCHAR(32)
)
BEGIN
  UPDATE PARAMS P
     SET P.PARAM_ID=PARAM_ID,
         P.NAME=NAME,
         P.DESCRIPTION=DESCRIPTION,
         P.PARAM_TYPE=PARAM_TYPE,
         P.MAX_LENGTH=MAX_LENGTH,
         P.SORTING=SORTING,
         P.LOCKED=LOCKED,
         P.DEFAULT_VALUE=DEFAULT_VALUE
   WHERE P.PARAM_ID=OLD_PARAM_ID;
END;

--

ALTER TABLE COLUMN_PARAMS
ADD PLACING VARCHAR(100)

--

ALTER TABLE COLUMN_PARAMS
ADD GENERAL INTEGER

--

DROP PROCEDURE I_COLUMN_PARAM;

CREATE PROCEDURE `I_COLUMN_PARAM`(
  IN COLUMN_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN STRING_BEFORE VARCHAR(100),
  IN USE_STRING_BEFORE INTEGER,
  IN STRING_AFTER VARCHAR(100),
  IN USE_STRING_AFTER INTEGER,
  IN ELEMENT_TYPE INTEGER,
  IN POSITION INTEGER,
  IN PLACING VARCHAR(100),
  IN GENERAL INTEGER
)
BEGIN
  INSERT INTO COLUMN_PARAMS (COLUMN_ID,PARAM_ID,PRIORITY,STRING_BEFORE,USE_STRING_BEFORE,
	                                     STRING_AFTER,USE_STRING_AFTER,ELEMENT_TYPE,POSITION,PLACING,GENERAL)
       VALUES (COLUMN_ID,PARAM_ID,PRIORITY,STRING_BEFORE,USE_STRING_BEFORE,
			         STRING_AFTER,USE_STRING_AFTER,ELEMENT_TYPE,POSITION,PLACING,GENERAL);
END;

--

DROP PROCEDURE IF EXISTS U_COLUMN_PARAM;

--

CREATE PROCEDURE `U_COLUMN_PARAM`(
  IN COLUMN_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN STRING_BEFORE VARCHAR(100),
  IN USE_STRING_BEFORE INTEGER,
  IN STRING_AFTER VARCHAR(100),
  IN USE_STRING_AFTER INTEGER,
  IN ELEMENT_TYPE INTEGER,
  IN POSITION INTEGER,
  IN GENERAL INTEGER,
  IN PLACING VARCHAR(100),
  IN OLD_COLUMN_ID VARCHAR(32),
  IN OLD_PARAM_ID VARCHAR(32)
)
BEGIN
  UPDATE  COLUMN_PARAMS CP
     SET CP.COLUMN_ID=COLUMN_ID,
         CP.PARAM_ID=PARAM_ID,
         CP.PRIORITY=PRIORITY,
         CP.STRING_BEFORE=STRING_BEFORE,
         CP.USE_STRING_BEFORE=USE_STRING_BEFORE,
         CP.STRING_AFTER=STRING_AFTER,
 	 CP.USE_STRING_AFTER=USE_STRING_AFTER,
         CP.ELEMENT_TYPE=ELEMENT_TYPE,
         CP.POSITION=POSITION,
         CP.GENERAL=GENERAL,
         CP.PLACING=PLACING
   WHERE CP.COLUMN_ID=OLD_COLUMN_ID
     AND CP.PARAM_ID=OLD_PARAM_ID;
END;

--

DROP VIEW `S_COLUMN_PARAMS`

--

CREATE VIEW `S_COLUMN_PARAMS`
AS
             SELECT `CP`.`COLUMN_ID` AS `COLUMN_ID`,
                    `CP`.`PARAM_ID` AS `PARAM_ID`,
                    `CP`.`PRIORITY` AS `PRIORITY`,
                    `CP`.`STRING_BEFORE` AS `STRING_BEFORE`,
                    `CP`.`STRING_AFTER` AS `STRING_AFTER`,
                    `CP`.`USE_STRING_BEFORE` AS `USE_STRING_BEFORE`,
                    `CP`.`USE_STRING_AFTER` AS `USE_STRING_AFTER`,
                    `CP`.`ELEMENT_TYPE` AS `ELEMENT_TYPE`,
                    `CP`.`POSITION` AS `POSITION`,
                    `C`.`NAME` AS `COLUMN_NAME`,
                    `P`.`NAME` AS `PARAM_NAME`,
                    `P`.`PARAM_TYPE` AS `PARAM_TYPE`,
                    `CP`.`PLACING` AS `PLACING`,
                    `CP`.`GENERAL` AS `GENERAL`
               FROM ((`COLUMN_PARAMS` `CP`
                      JOIN`COLUMNS` `C`
                      ON ((`C`.`COLUMN_ID` = `CP`.`COLUMN_ID`)))
                     JOIN`PARAMS` `P`
                     ON ((`P`.`PARAM_ID` = `CP`.`PARAM_ID`)));

--

ALTER TABLE COLUMNS
ADD SEARCH_PRIORITY INTEGER

--

DROP VIEW `S_COLUMNS`

--

CREATE VIEW `S_COLUMNS`
AS
            SELECT `C`.`COLUMN_ID` AS `COLUMN_ID`,
                   `C`.`NAME` AS `NAME`,
                   `C`.`DESCRIPTION` AS `DESCRIPTION`,
                   `C`.`PRESENTATION_ID` AS `PRESENTATION_ID`,
                   `C`.`PRIORITY` AS `PRIORITY`,
                   `C`.`VALUE_DEFAULT` AS `VALUE_DEFAULT`,
                   `C`.`VISIBLE` AS `VISIBLE`,
                   `C`.`USE_DEPEND` AS `USE_DEPEND`,
                   `C`.`NOT_EMPTY` AS `NOT_EMPTY`,
                   `C`.`WIDTH` AS `WIDTH`,
                   `C`.`ALIGN` AS `ALIGN`,
                   `C`.`SEARCH_PRIORITY` AS `SEARCH_PRIORITY`,
                   `P`.`NAME` AS `PRESENTATION_NAME`
              FROM (`COLUMNS` `C`
                    JOIN`PRESENTATIONS` `P`
                    ON ((`P`.`PRESENTATION_ID` = `C`.`PRESENTATION_ID`)));

--

DROP PROCEDURE I_COLUMN;

--

CREATE PROCEDURE `I_COLUMN`(
  IN COLUMN_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PRESENTATION_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN VALUE_DEFAULT VARCHAR(250),
  IN VISIBLE INTEGER,
  IN USE_DEPEND INTEGER,
  IN NOT_EMPTY INTEGER,
  IN WIDTH VARCHAR(10),
  IN ALIGN INTEGER,
  IN SEARCH_PRIORITY INTEGER
)
BEGIN
  INSERT INTO  COLUMNS (COLUMN_ID,NAME,DESCRIPTION,PRESENTATION_ID,PRIORITY,
                                 VALUE_DEFAULT,VISIBLE,USE_DEPEND,NOT_EMPTY,WIDTH,ALIGN,SEARCH_PRIORITY)
       VALUES (COLUMN_ID,NAME,DESCRIPTION,PRESENTATION_ID,PRIORITY,
               VALUE_DEFAULT,VISIBLE,USE_DEPEND,NOT_EMPTY,WIDTH,ALIGN,SEARCH_PRIORITY);
END;

--

DROP PROCEDURE U_COLUMN;

--

CREATE PROCEDURE `U_COLUMN`(
  IN COLUMN_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PRESENTATION_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN VALUE_DEFAULT VARCHAR(250),
  IN VISIBLE INTEGER,
  IN USE_DEPEND INTEGER,
  IN NOT_EMPTY INTEGER,
  IN WIDTH VARCHAR(10),
  IN ALIGN INTEGER,
  IN SEARCH_PRIORITY INTEGER,
  IN OLD_COLUMN_ID VARCHAR(32)
)
BEGIN
  UPDATE  COLUMNS C
     SET C.COLUMN_ID=COLUMN_ID,
         C.NAME=NAME,
         C.DESCRIPTION=DESCRIPTION,
         C.PRESENTATION_ID=PRESENTATION_ID,
         C.PRIORITY=PRIORITY,
	       C.VALUE_DEFAULT=VALUE_DEFAULT,
	       C.VISIBLE=VISIBLE,
	       C.USE_DEPEND=USE_DEPEND,
	       C.NOT_EMPTY=NOT_EMPTY,
	       C.WIDTH=WIDTH,
	       C.ALIGN=ALIGN,
         C.SEARCH_PRIORITY=SEARCH_PRIORITY
   WHERE C.COLUMN_ID=OLD_COLUMN_ID;
END;

--

ALTER TABLE ACCOUNTS
ADD PHONE_INTERNAL VARCHAR(100)

--

DROP PROCEDURE I_ACCOUNT;

--

CREATE PROCEDURE `I_ACCOUNT`(
  IN ACCOUNT_ID VARCHAR(32),
  IN FIRM_ID VARCHAR(32),
	IN DATE_CREATE DATETIME,
  IN USER_NAME VARCHAR(100),
  IN PASSWORD VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN DB_USER_NAME VARCHAR(100),
  IN DB_PASSWORD VARCHAR(100),
  IN IS_ROLE INTEGER,
  IN LOCKED INTEGER,  
  IN AUTO_CREATED INTEGER,
  IN SURNAME VARCHAR(100),
  IN NAME VARCHAR(100),
  IN PATRONYMIC VARCHAR(100),
  IN PHONE VARCHAR(100),
  IN EMAIL VARCHAR(100),
	IN PHOTO LONGBLOB,
  IN JOB_TITLE VARCHAR(250),
  IN PHONE_INTERNAL VARCHAR(100)
)
BEGIN
  INSERT INTO  ACCOUNTS (ACCOUNT_ID,FIRM_ID,DATE_CREATE,USER_NAME,PASSWORD,DESCRIPTION,DB_USER_NAME,DB_PASSWORD,
	                                IS_ROLE,LOCKED,AUTO_CREATED,SURNAME,NAME,PATRONYMIC,PHONE,EMAIL,PHOTO,JOB_TITLE,PHONE_INTERNAL)
       VALUES (ACCOUNT_ID,FIRM_ID,DATE_CREATE,USER_NAME,PASSWORD,DESCRIPTION,DB_USER_NAME,DB_PASSWORD,
	             IS_ROLE,LOCKED,AUTO_CREATED,SURNAME,NAME,PATRONYMIC,PHONE,EMAIL,PHOTO,JOB_TITLE,PHONE_INTERNAL);
END;

--

DROP PROCEDURE U_ACCOUNT;

--

CREATE PROCEDURE `U_ACCOUNT`(
  IN ACCOUNT_ID VARCHAR(32),
  IN FIRM_ID VARCHAR(32),
	IN DATE_CREATE DATETIME,
  IN USER_NAME VARCHAR(100),
  IN PASSWORD VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN DB_USER_NAME VARCHAR(100),
  IN DB_PASSWORD VARCHAR(100),
  IN IS_ROLE INTEGER,
  IN LOCKED INTEGER,  
  IN AUTO_CREATED INTEGER,
  IN SURNAME VARCHAR(100),
  IN NAME VARCHAR(100),
  IN PATRONYMIC VARCHAR(100),
  IN PHONE VARCHAR(100),
  IN EMAIL VARCHAR(100),
	IN PHOTO LONGBLOB,
  IN JOB_TITLE VARCHAR(250),
  IN PHONE_INTERNAL VARCHAR(100),
  IN OLD_ACCOUNT_ID VARCHAR(32)
)
BEGIN
  UPDATE  ACCOUNTS A
     SET A.ACCOUNT_ID=ACCOUNT_ID,
         A.FIRM_ID=FIRM_ID,
				 A.DATE_CREATE=DATE_CREATE,
         A.USER_NAME=USER_NAME,
         A.PASSWORD=PASSWORD,
         A.DESCRIPTION=DESCRIPTION,
         A.DB_USER_NAME=DB_USER_NAME,
         A.DB_PASSWORD=DB_PASSWORD,
         A.IS_ROLE=IS_ROLE,
				 A.LOCKED=LOCKED,
				 A.AUTO_CREATED=AUTO_CREATED,
				 A.SURNAME=SURNAME,
				 A.NAME=NAME,
				 A.PATRONYMIC=PATRONYMIC,
				 A.PHONE=PHONE,
				 A.EMAIL=EMAIL,
				 A.PHOTO=PHOTO,
         A.JOB_TITLE=JOB_TITLE,
         A.PHONE_INTERNAL=PHONE_INTERNAL
   WHERE A.ACCOUNT_ID=OLD_ACCOUNT_ID;
END;

--

DROP VIEW `S_ACCOUNTS`

--

CREATE VIEW `S_ACCOUNTS`
AS
                 SELECT `A`.`ACCOUNT_ID` AS `ACCOUNT_ID`,
                        `A`.`PASSWORD` AS `PASSWORD`,
                        `A`.`DESCRIPTION` AS `DESCRIPTION`,
                        `A`.`DB_PASSWORD` AS `DB_PASSWORD`,
                        `A`.`IS_ROLE` AS `IS_ROLE`,
                        `A`.`USER_NAME` AS `USER_NAME`,
                        `A`.`FIRM_ID` AS `FIRM_ID`,
                        `A`.`LOCKED` AS `LOCKED`,
                        `A`.`AUTO_CREATED` AS `AUTO_CREATED`,
                        `A`.`SURNAME` AS `SURNAME`,
                        `A`.`NAME` AS `NAME`,
                        `A`.`PATRONYMIC` AS `PATRONYMIC`,
                        `A`.`PHONE` AS `PHONE`,
                        `A`.`EMAIL` AS `EMAIL`,
                        `A`.`DB_USER_NAME` AS `DB_USER_NAME`,
                        `A`.`DATE_CREATE` AS `DATE_CREATE`,
                        `A`.`PHOTO` AS `PHOTO`,
                        `A`.`JOB_TITLE` AS `JOB_TITLE`,
                        `A`.`PHONE_INTERNAL` AS `PHONE_INTERNAL`,
                        `F`.`SMALL_NAME` AS `FIRM_SMALL_NAME`
                   FROM (`ACCOUNTS` `A`
                         LEFT JOIN`FIRMS` `F`
                         ON ((`F`.`FIRM_ID` = `A`.`FIRM_ID`)));

--
