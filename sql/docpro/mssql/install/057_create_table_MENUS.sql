/* Создание таблицы меню */

CREATE TABLE /*PREFIX*/MENUS
(
  MENU_ID VARCHAR(32) NOT NULL,
  INTERFACE_ID VARCHAR(32),
  PARENT_ID VARCHAR(32),
  NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(250),
  PRIORITY INTEGER NOT NULL,
  SHORTCUT INTEGER,
  PICTURE IMAGE,
  LEVEL INTEGER NOT NULL,
  PRIMARY KEY (MENU_ID),
  FOREIGN KEY (INTERFACE_ID) REFERENCES /*PREFIX*/INTERFACES (INTERFACE_ID),
  FOREIGN KEY (PARENT_ID) REFERENCES /*PREFIX*/MENUS (MENU_ID)
)

--

/* Создание просмотра таблицы меню */

CREATE VIEW /*PREFIX*/S_MENUS
AS
   SELECT M.*, 
          I.NAME AS INTERFACE_NAME,
          M1.NAME AS PARENT_NAME					
     FROM /*PREFIX*/MENUS M
     LEFT JOIN /*PREFIX*/INTERFACES I ON I.INTERFACE_ID=M.INTERFACE_ID
     LEFT JOIN	/*PREFIX*/MENUS M1 ON M1.MENU_ID=M.PARENT_ID

--

/* Создание процедуры добавления меню */

CREATE PROCEDURE /*PREFIX*/I_MENU
  @MENU_ID VARCHAR(32),
  @INTERFACE_ID VARCHAR(32),
  @PARENT_ID VARCHAR(32),
  @NAME VARCHAR(100),
  @DESCRIPTION VARCHAR(250),
  @PRIORITY INTEGER,
  @SHORTCUT INTEGER,
  @PICTURE IMAGE
AS
BEGIN
  DECLARE @LEVEL INTEGER;
  IF (@PARENT_ID IS NULL) BEGIN
    SET @LEVEL=1;
  END ELSE BEGIN
    SET @LEVEL=(SELECT TOP 1 M.LEVEL+1 FROM /*PREFIX*/MENUS M WHERE M.MENU_ID=@PARENT_ID);
  END;
  INSERT INTO /*PREFIX*/MENUS (MENU_ID,INTERFACE_ID,PARENT_ID,NAME,DESCRIPTION,PRIORITY,SHORTCUT,PICTURE,LEVEL)
       VALUES (@MENU_ID,@INTERFACE_ID,@PARENT_ID,@NAME,@DESCRIPTION,@PRIORITY,@SHORTCUT,@PICTURE,@LEVEL);
END;

--

/* Создание процедуры обновления уровней меню */

CREATE PROCEDURE /*PREFIX*/R_MENU_LEVELS
  @PARENT_ID VARCHAR(32),
  @LEVEL INTEGER
AS
BEGIN
  DECLARE @MENU_ID VARCHAR(32);
  DECLARE @L INTEGER;
  DECLARE C1 CURSOR LOCAL FOR SELECT M.MENU_ID
	                        FROM /*PREFIX*/MENUS M 
                               WHERE M.PARENT_ID=@PARENT_ID  FOR READ ONLY;   
  OPEN C1;
  FETCH NEXT FROM C1 INTO @MENU_ID;
  WHILE @@FETCH_STATUS = 0 BEGIN
    
    SET @L=@LEVEL+1;

    UPDATE /*PREFIX*/MENUS
       SET LEVEL=@L
     WHERE MENU_ID=@MENU_ID;

    EXEC /*PREFIX*/R_MENU_LEVELS @MENU_ID, @L;

    FETCH NEXT FROM C1 INTO @MENU_ID;
  END;
  CLOSE C1;	
  DEALLOCATE С1;

END;

--

/* Создание процедуры изменения меню */

CREATE PROCEDURE /*PREFIX*/U_MENU
  @MENU_ID VARCHAR(32),
  @INTERFACE_ID VARCHAR(32),
  @PARENT_ID VARCHAR(32),
  @NAME VARCHAR(100),
  @DESCRIPTION VARCHAR(250),
  @PRIORITY INTEGER,
  @SHORTCUT INTEGER,
  @PICTURE IMAGE,
  @OLD_MENU_ID VARCHAR(32)
AS
BEGIN
  DECLARE @LEVEL INTEGER;
  IF (@PARENT_ID IS NULL) BEGIN
    SET @LEVEL=1;
  END ELSE BEGIN
    SET @LEVEL=(SELECT TOP 1 M.LEVEL+1 FROM /*PREFIX*/MENUS M WHERE M.MENU_ID=@PARENT_ID);
  END;

  UPDATE /*PREFIX*/MENUS
     SET MENU_ID=@MENU_ID,
         INTERFACE_ID=@INTERFACE_ID,
	 PARENT_ID=@PARENT_ID,
         NAME=@NAME,
	 DESCRIPTION=@DESCRIPTION,
	 PRIORITY=@PRIORITY,
	 SHORTCUT=@SHORTCUT,
	 PICTURE=@PICTURE,
	 LEVEL=@LEVEL
   WHERE MENU_ID=@OLD_MENU_ID;
	
  EXEC /*PREFIX*/R_MENU_LEVELS @MENU_ID, @LEVEL;
END;

--

/* Создание процедуры удаления меню */

CREATE PROCEDURE /*PREFIX*/D_MENU
  @OLD_MENU_ID VARCHAR(32)
AS
BEGIN
  DELETE FROM /*PREFIX*/MENUS
        WHERE MENU_ID=@OLD_MENU_ID;
END;

--