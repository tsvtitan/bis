ALTER TABLE COLUMN_PARAMS
ADD POSITION INTEGER

--

DROP PROCEDURE I_COLUMN_PARAM

--

CREATE PROCEDURE I_COLUMN_PARAM
(
  IN COLUMN_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN STRING_BEFORE VARCHAR(100),
  IN USE_STRING_BEFORE INTEGER,
  IN STRING_AFTER VARCHAR(100),
  IN USE_STRING_AFTER INTEGER,
  IN ELEMENT_TYPE INTEGER,
  IN POSITION INTEGER
)
BEGIN
  INSERT INTO COLUMN_PARAMS (COLUMN_ID,PARAM_ID,PRIORITY,STRING_BEFORE,USE_STRING_BEFORE,
	                     STRING_AFTER,USE_STRING_AFTER,ELEMENT_TYPE,POSITION)
       VALUES (COLUMN_ID,PARAM_ID,PRIORITY,STRING_BEFORE,USE_STRING_BEFORE,
	       STRING_AFTER,USE_STRING_AFTER,ELEMENT_TYPE,POSITION);
END;

--

DROP PROCEDURE U_COLUMN_PARAM

--

CREATE PROCEDURE U_COLUMN_PARAM
(
  IN COLUMN_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PRIORITY INTEGER,
  IN STRING_BEFORE VARCHAR(100),
  IN USE_STRING_BEFORE INTEGER,
  IN STRING_AFTER VARCHAR(100),
  IN USE_STRING_AFTER INTEGER,
  IN ELEMENT_TYPE INTEGER,
  IN POSITION INTEGER,
  IN OLD_COLUMN_ID VARCHAR(32),
  IN OLD_PARAM_ID VARCHAR(32)
)
BEGIN
  UPDATE COLUMN_PARAMS CP
     SET CP.COLUMN_ID=COLUMN_ID,
         CP.PARAM_ID=PARAM_ID,
         CP.PRIORITY=PRIORITY,
         CP.STRING_BEFORE=STRING_BEFORE,
	 CP.USE_STRING_BEFORE=USE_STRING_BEFORE,
         CP.STRING_AFTER=STRING_AFTER,
	 CP.USE_STRING_AFTER=USE_STRING_AFTER,
         CP.ELEMENT_TYPE=ELEMENT_TYPE,
         CP.POSITION=POSITION
   WHERE CP.COLUMN_ID=OLD_COLUMN_ID
     AND CP.PARAM_ID=OLD_PARAM_ID;
END;

--

DROP VIEW S_COLUMN_PARAMS

--

CREATE VIEW S_COLUMN_PARAMS
AS
SELECT CP.*,
       C.NAME AS COLUMN_NAME,
       P.NAME AS PARAM_NAME,
       P.PARAM_TYPE
  FROM COLUMN_PARAMS CP
  JOIN COLUMNS C ON  C.COLUMN_ID=CP.COLUMN_ID
  JOIN PARAMS P ON P.PARAM_ID=CP.PARAM_ID

--

ALTER TABLE DESIGNS
ADD CSS_CLASS VARCHAR(100)

--

DROP VIEW S_DESIGNS

--

CREATE VIEW S_DESIGNS
AS
SELECT * FROM DESIGNS

--

DROP PROCEDURE I_DESIGN

--

CREATE PROCEDURE I_DESIGN
(
  IN DESIGN_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN NUM VARCHAR(10),
  IN CSS_CLASS VARCHAR(100)
)
BEGIN
  INSERT INTO DESIGNS (DESIGN_ID,NAME,DESCRIPTION,NUM,CSS_CLASS)
       VALUES (DESIGN_ID,NAME,DESCRIPTION,NUM,CSS_CLASS);
END;

--

CREATE PROCEDURE U_DESIGN

--

CREATE PROCEDURE U_DESIGN
(
  IN DESIGN_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN NUM VARCHAR(10),
  IN CSS_CLASS VARCHAR(100),
  IN OLD_DESIGN_ID VARCHAR(32)
)
BEGIN
  UPDATE /*PREFIX*/DESIGNS V
     SET V.DESIGN_ID=DESIGN_ID,
         V.NAME=NAME,
	       V.DESCRIPTION=DESCRIPTION,
				 V.NUM=NUM,
         V.CSS_CLASS=CSS_CLASS
   WHERE V.DESIGN_ID=OLD_DESIGN_ID;
END;

--

DROP VIEW S_TYPE_PARAMS

--

DROP PROCEDURE D_TYPE_PARAM

--

DROP PROCEDURE U_TYPE_PARAM

--

DROP PROCEDURE I_TYPE_PARAM

--

DROP TABLE TYPE_PARAMS

--

CREATE TABLE INPUT_PARAMS
(
  INPUT_PARAM_ID VARCHAR(32) NOT NULL,
  VIEW_ID VARCHAR(32) NOT NULL,
  TYPE_ID VARCHAR(32) NOT NULL,
  OPERATION_ID VARCHAR(32) NOT NULL,
  PARAM_ID VARCHAR(32) NOT NULL,
  ELEMENT_TYPE INTEGER,
  PRIORITY INTEGER,
  REQUIRED INTEGER,
  POSITION INTEGER,
  PRIMARY KEY (INPUT_PARAM_ID),
  FOREIGN KEY (VIEW_ID) REFERENCES VIEWS (VIEW_ID),
  FOREIGN KEY (TYPE_ID) REFERENCES TYPES (TYPE_ID),
  FOREIGN KEY (OPERATION_ID) REFERENCES OPERATIONS (OPERATION_ID),
  FOREIGN KEY (PARAM_ID) REFERENCES PARAMS (PARAM_ID)
)

--

CREATE VIEW S_INPUT_PARAMS
AS
SELECT IP.*,
       V.NAME AS VIEW_NAME,
       V.NUM AS VIEW_NUM,
       T.NAME AS TYPE_NAME,
       T.NUM AS TYPE_NUM,
       O.NAME AS OPERATION_NAME,
       O.NUM AS OPERATION_NUM,
       P.NAME AS PARAM_NAME,
       P.PARAM_TYPE
  FROM INPUT_PARAMS IP
  JOIN VIEWS V ON V.VIEW_ID=IP.VIEW_ID
  JOIN TYPES T ON T.TYPE_ID=IP.TYPE_ID
  JOIN OPERATIONS O ON O.OPERATION_ID=IP.OPERATION_ID
  JOIN PARAMS P ON P.PARAM_ID=IP.PARAM_ID

--

CREATE PROCEDURE I_INPUT_PARAM
(
  IN INPUT_PARAM_ID VARCHAR(32),
  IN VIEW_ID VARCHAR(32),
  IN TYPE_ID VARCHAR(32),
  IN OPERATION_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN ELEMENT_TYPE INTEGER,
  IN PRIORITY INTEGER,
  IN REQUIRED INTEGER,
  IN POSITION INTEGER
)
BEGIN
  INSERT INTO INPUT_PARAMS (INPUT_PARAM_ID,VIEW_ID,TYPE_ID,OPERATION_ID,
                            PARAM_ID,ELEMENT_TYPE,PRIORITY,REQUIRED,POSITION)
       VALUES (INPUT_PARAM_ID,VIEW_ID,TYPE_ID,OPERATION_ID,
               PARAM_ID,ELEMENT_TYPE,PRIORITY,REQUIRED,POSITION);
END;

--

CREATE PROCEDURE U_INPUT_PARAM
(
  IN INPUT_PARAM_ID VARCHAR(32),
  IN VIEW_ID VARCHAR(32),
  IN TYPE_ID VARCHAR(32),
  IN OPERATION_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN ELEMENT_TYPE INTEGER,
  IN PRIORITY INTEGER,
  IN REQUIRED INTEGER,
  IN POSITION INTEGER,
  IN OLD_INPUT_PARAM_ID VARCHAR(32)
)
BEGIN
  UPDATE INPUT_PARAMS IP
     SET IP.INPUT_PARAM_ID=INPUT_PARAM_ID,
         IP.VIEW_ID=VIEW_ID,
         IP.TYPE_ID=TYPE_ID,
         IP.OPERATION_ID=OPERATION_ID,
         IP.PARAM_ID=PARAM_ID,
         IP.ELEMENT_TYPE=ELEMENT_TYPE,
         IP.PRIORITY=PRIORITY,
         IP.REQUIRED=REQUIRED,
         IP.POSITION=POSITION
   WHERE IP.INPUT_PARAM_ID=OLD_INPUT_PARAM_ID;
END;

--

CREATE PROCEDURE D_INPUT_PARAM
(
  IN OLD_INPUT_PARAM_ID VARCHAR(32)
)
BEGIN
  DELETE FROM INPUT_PARAMS 
        WHERE INPUT_PARAM_ID=OLD_INPUT_PARAM_ID;
END;

--

