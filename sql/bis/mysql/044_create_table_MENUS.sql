/* Создание таблицы меню */

CREATE TABLE /*PREFIX*/MENUS
(
  MENU_ID VARCHAR(32) NOT NULL,
  INTERFACE_ID VARCHAR(32),
  PARENT_ID VARCHAR(32),
  NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(250),
  PRIORITY INTEGER NOT NULL,
  SHORTCUT INTEGER,
  PICTURE LONGBLOB,
  LEVEL INTEGER NOT NULL,
  PRIMARY KEY (MENU_ID),
  FOREIGN KEY (INTERFACE_ID) REFERENCES INTERFACES (INTERFACE_ID),
  FOREIGN KEY (PARENT_ID) REFERENCES MENUS (MENU_ID)
)

--

/* Создание просмотра таблицы меню */

CREATE VIEW /*PREFIX*/S_MENUS
AS
   SELECT M.*, 
          I.NAME AS INTERFACE_NAME,
					M1.NAME AS PARENT_NAME					
     FROM /*PREFIX*/MENUS M
     LEFT JOIN /*PREFIX*/INTERFACES I ON I.INTERFACE_ID=M.INTERFACE_ID
     LEFT JOIN	/*PREFIX*/MENUS M1 ON M1.MENU_ID=M.PARENT_ID

--

/* Создание процедуры добавления меню */

CREATE PROCEDURE /*PREFIX*/I_MENU
(
  IN MENU_ID VARCHAR(32),
  IN INTERFACE_ID VARCHAR(32),
  IN PARENT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PRIORITY INTEGER,
  IN SHORTCUT INTEGER,
  IN PICTURE LONGBLOB
)
BEGIN
  DECLARE LEVEL INTEGER;
	IF (PARENT_ID IS NULL) THEN
	  SET LEVEL=1;
	ELSE
	  SELECT M.LEVEL+1 INTO LEVEL 
		  FROM /*PREFIX*/MENUS M
		 WHERE M.MENU_ID=PARENT_ID;
	END IF;
  INSERT INTO /*PREFIX*/MENUS (MENU_ID,INTERFACE_ID,PARENT_ID,NAME,DESCRIPTION,PRIORITY,SHORTCUT,PICTURE,LEVEL)
       VALUES (MENU_ID,INTERFACE_ID,PARENT_ID,NAME,DESCRIPTION,PRIORITY,SHORTCUT,PICTURE,LEVEL);
END;

--

/* Создание процедуры обновления уровней меню */

CREATE PROCEDURE /*PREFIX*/R_MENU_LEVELS
(
  IN PARENT_ID VARCHAR(32),
	IN LEVEL INTEGER
)
BEGIN
  DECLARE MENU_ID VARCHAR(32);
	DECLARE DONE INTEGER DEFAULT 0;
  DECLARE C1 CURSOR FOR SELECT M.MENU_ID
	                        FROM /*PREFIX*/MENUS M WHERE M.PARENT_ID=PARENT_ID;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE=1;
  OPEN C1;
  FETCH C1 INTO MENU_ID;
  WHILE NOT DONE DO
	  UPDATE /*PREFIX*/MENUS M
		   SET M.LEVEL=LEVEL+1
		 WHERE M.MENU_ID=MENU_ID;
		CALL /*PREFIX*/R_MENU_LEVELS(MENU_ID,LEVEL+1);
    FETCH C1 INTO MENU_ID;
  END WHILE;
  CLOSE C1;	
END;

--

/* Создание процедуры изменения меню */

CREATE PROCEDURE /*PREFIX*/U_MENU
(
  IN MENU_ID VARCHAR(32),
  IN INTERFACE_ID VARCHAR(32),
  IN PARENT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN PRIORITY INTEGER,
  IN SHORTCUT INTEGER,
  IN PICTURE LONGBLOB,
  IN OLD_MENU_ID VARCHAR(32)
)
BEGIN
 DECLARE LEVEL INTEGER;
	IF (PARENT_ID IS NULL) THEN
	  SET LEVEL=1;
	ELSE
	  SELECT M.LEVEL+1 INTO LEVEL 
		  FROM /*PREFIX*/MENUS M
		 WHERE M.MENU_ID=PARENT_ID;
	END IF;

  UPDATE /*PREFIX*/MENUS M
     SET M.MENU_ID=MENU_ID,
         M.INTERFACE_ID=INTERFACE_ID,
				 M.PARENT_ID=PARENT_ID,
				 M.NAME=NAME,
				 M.DESCRIPTION=DESCRIPTION,
				 M.PRIORITY=PRIORITY,
				 M.SHORTCUT=SHORTCUT,
				 M.PICTURE=PICTURE,
				 M.LEVEL=LEVEL
   WHERE M.MENU_ID=OLD_MENU_ID;
	
	CALL /*PREFIX*/R_MENU_LEVELS(MENU_ID,LEVEL);
END;


--

/* Создание процедуры удаления меню */

CREATE PROCEDURE /*PREFIX*/D_MENU
(
  IN OLD_MENU_ID VARCHAR(32)
)
BEGIN
  DELETE FROM /*PREFIX*/MENUS
        WHERE MENU_ID=OLD_MENU_ID;
END;

--