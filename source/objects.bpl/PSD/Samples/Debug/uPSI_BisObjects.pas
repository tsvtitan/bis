unit uPSI_BisObjects;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_BisObjects = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TBisObjects(CL: TPSPascalCompiler);
procedure SIRegister_BisObjects(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TBisObjects(CL: TPSRuntimeClassImporter);
procedure RIRegister_BisObjects(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Contnrs
  ,BisObject
  ,BisObjectsIntf
  ,BisObjects
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_BisObjects]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TBisObjects(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TBisObject', 'TBisObjects') do
  with CL.AddClassN(CL.FindClass('TBisObject'),'TBisObjects') do
  begin
    RegisterMethod('Constructor Create');
    RegisterMethod('procedure Free');
    RegisterMethod('Function Find( AName : String) : TBisObject');
    RegisterMethod('Function Add( AName : String) : TBisObject');
    RegisterMethod('Procedure Clear');
    RegisterProperty('Unique', 'Boolean', iptrw);
    RegisterProperty('Items', 'TBisObject Integer', iptr);
    RegisterProperty('Name', 'String', iptrw);
    RegisterProperty('Count', 'Integer', iptr);
    RegisterProperty('Objects', 'TObjectList', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_BisObjects(CL: TPSPascalCompiler);
begin
  SIRegister_TBisObjects(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TBisObjectsObjects_R(Self: TBisObjects; var T: TObjectList);
begin T := Self.Objects; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsCount_R(Self: TBisObjects; var T: Integer);
begin T := Self.Count; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsName_W(Self: TBisObjects; const T: String);
begin Self.Name := T; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsName_R(Self: TBisObjects; var T: String);
begin T := Self.Name; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsItems_R(Self: TBisObjects; var T: TBisObject; const t1: Integer);
begin T := Self.Items[t1]; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsUnique_W(Self: TBisObjects; const T: Boolean);
begin Self.Unique := T; end;

(*----------------------------------------------------------------------------*)
procedure TBisObjectsUnique_R(Self: TBisObjects; var T: Boolean);
begin T := Self.Unique; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TBisObjects(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TBisObjects) do
  begin
    RegisterVirtualConstructor(@TBisObjects.Create, 'Create');
    RegisterMethod(@TBisObjects.Find, 'Find');
    RegisterVirtualMethod(@TBisObjects.Add, 'Add');
    RegisterMethod(@TBisObjects.Clear, 'Clear');
    RegisterPropertyHelper(@TBisObjectsUnique_R,@TBisObjectsUnique_W,'Unique');
    RegisterPropertyHelper(@TBisObjectsItems_R,nil,'Items');
    RegisterPropertyHelper(@TBisObjectsName_R,@TBisObjectsName_W,'Name');
    RegisterPropertyHelper(@TBisObjectsCount_R,nil,'Count');
    RegisterPropertyHelper(@TBisObjectsObjects_R,nil,'Objects');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_BisObjects(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TBisObjects(CL);
end;

 
 
{ TPSImport_BisObjects }
(*----------------------------------------------------------------------------*)
procedure TPSImport_BisObjects.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_BisObjects(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_BisObjects.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_BisObjects(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
