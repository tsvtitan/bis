/* Создание таблицы экспорта */

CREATE TABLE /*PREFIX*/EXPORTS
(
  EXPORT_ID VARCHAR(32) NOT NULL,
  VIEW_ID VARCHAR(32),
  TYPE_ID VARCHAR(32),
  OPERATION_ID VARCHAR(32),
  PARAM_ID VARCHAR(32),
  PARENT_ID VARCHAR(32),
  NAME VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(250),
  EXPORT VARCHAR(100),
  PRIORITY INTEGER,
  LEVEL INTEGER NOT NULL,
  COND INTEGER,
  VALUE VARCHAR(100),
  SORTING LONGBLOB,
  HEAD_RTF LONGBLOB,
  BODY_RTF LONGBLOB,
  DISABLED INTEGER,
  PRIMARY KEY (EXPORT_ID),
  FOREIGN KEY (VIEW_ID) REFERENCES /*PREFIX*/VIEWS (VIEW_ID),
  FOREIGN KEY (TYPE_ID) REFERENCES /*PREFIX*/TYPES (TYPE_ID),
  FOREIGN KEY (OPERATION_ID) REFERENCES /*PREFIX*/OPERATIONS (OPERATION_ID),
  FOREIGN KEY (PARAM_ID) REFERENCES /*PREFIX*/PARAMS (PARAM_ID),  
  FOREIGN KEY (PARENT_ID) REFERENCES EXPORTS/*PREFIX*/ (EXPORT_ID)  
)

--

/* Создание просмотра таблицы экспорта */

CREATE VIEW /*PREFIX*/S_EXPORTS
AS
  SELECT E.*,
         V.NAME AS VIEW_NAME,
         V.NUM AS VIEW_NUM,
         T.NAME AS TYPE_NAME,
         T.NUM AS TYPE_NUM,
         O.NAME AS OPERATION_NAME,
         O.NUM AS OPERATION_NUM,
         P.NAME AS PARAM_NAME,
         E1.NAME AS PARENT_NAME
    FROM /*PREFIX*/EXPORTS E
    LEFT JOIN /*PREFIX*/VIEWS V ON V.VIEW_ID=E.VIEW_ID
    LEFT JOIN /*PREFIX*/TYPES T ON T.TYPE_ID=E.TYPE_ID
    LEFT JOIN /*PREFIX*/OPERATIONS O ON O.OPERATION_ID=E.OPERATION_ID
    LEFT JOIN /*PREFIX*/PARAMS P ON P.PARAM_ID=E.PARAM_ID
    LEFT JOIN /*PREFIX*/EXPORTS E1 ON E1.EXPORT_ID=E.PARENT_ID

--

/* Создание процедуры добавления экспорта */

CREATE PROCEDURE /*PREFIX*/I_EXPORT
(
  IN EXPORT_ID VARCHAR(32),
  IN VIEW_ID VARCHAR(32),
  IN TYPE_ID VARCHAR(32),
  IN OPERATION_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PARENT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN EXPORT VARCHAR(100),
  IN PRIORITY INTEGER,
  IN LEVEL INTEGER,
  IN COND INTEGER,
  IN VALUE VARCHAR(100),
  IN SORTING LONGBLOB,
  IN HEAD_RTF LONGBLOB,
  IN BODY_RTF LONGBLOB,
  IN DISABLED INTEGER
)
BEGIN
  DECLARE LEVEL INTEGER;
	IF (PARENT_ID IS NULL) THEN
	  SET LEVEL=1;
	ELSE
	  SELECT E.LEVEL+1 INTO LEVEL 
		  FROM /*PREFIX*/EXPORTS E
		 WHERE E.EXPORT_ID=PARENT_ID;
	END IF;
  INSERT INTO /*PREFIX*/EXPORTS (EXPORT_ID,VIEW_ID,TYPE_ID,OPERATION_ID,PARAM_ID,PARENT_ID,NAME,DESCRIPTION,
                                 EXPORT,PRIORITY,LEVEL,COND,VALUE,SORTING,HEAD_RTF,BODY_RTF,DISABLED)
       VALUES (EXPORT_ID,VIEW_ID,TYPE_ID,OPERATION_ID,PARAM_ID,PARENT_ID,NAME,DESCRIPTION,
               EXPORT,PRIORITY,LEVEL,COND,VALUE,SORTING,HEAD_RTF,BODY_RTF,DISABLED);
END;

--

/* Создание процедуры обновления уровней экспорта */

CREATE PROCEDURE /*PREFIX*/R_EXPORT_LEVELS
(
  IN PARENT_ID VARCHAR(32),
	IN LEVEL INTEGER
)
BEGIN
  DECLARE EXPORT_ID VARCHAR(32);
	DECLARE DONE INTEGER DEFAULT 0;
  DECLARE C1 CURSOR FOR SELECT E.EXPORT_ID
	                        FROM /*PREFIX*/EXPORTS E WHERE E.PARENT_ID=PARENT_ID;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE=1;
  OPEN C1;
  FETCH C1 INTO EXPORT_ID;
  WHILE NOT DONE DO
	  UPDATE /*PREFIX*/EXPORTS E
		   SET E.LEVEL=LEVEL+1
		 WHERE E.EXPORT_ID=EXPORT_ID;
		CALL /*PREFIX*/R_EXPORT_LEVELS(EXPORT_ID,LEVEL+1);
    FETCH C1 INTO EXPORT_ID;
  END WHILE;
  CLOSE C1;	
END;

--

/* Создание процедуры изменения экспорта */

CREATE PROCEDURE /*PREFIX*/U_EXPORT
(
  IN EXPORT_ID VARCHAR(32),
  IN VIEW_ID VARCHAR(32),
  IN TYPE_ID VARCHAR(32),
  IN OPERATION_ID VARCHAR(32),
  IN PARAM_ID VARCHAR(32),
  IN PARENT_ID VARCHAR(32),
  IN NAME VARCHAR(100),
  IN DESCRIPTION VARCHAR(250),
  IN EXPORT VARCHAR(100),
  IN PRIORITY INTEGER,
  IN LEVEL INTEGER,
  IN COND INTEGER,
  IN VALUE VARCHAR(100),
  IN SORTING LONGBLOB,
  IN HEAD_RTF LONGBLOB,
  IN BODY_RTF LONGBLOB,
  IN DISABLED INTEGER,
  IN OLD_EXPORT_ID VARCHAR(32)
)
BEGIN
 DECLARE LEVEL INTEGER;
	IF (PARENT_ID IS NULL) THEN
	  SET LEVEL=1;
	ELSE
	  SELECT R.LEVEL+1 INTO LEVEL 
		  FROM /*PREFIX*/EXPORTS R
		 WHERE R.EXPORT_ID=PARENT_ID;
	END IF;

  UPDATE /*PREFIX*/EXPORTS R
     SET R.EXPORT_ID=EXPORT_ID,
         R.VIEW_ID=VIEW_ID,
         R.TYPE_ID=TYPE_ID,
         R.OPERATION_ID=OPERATION_ID,
         R.PARAM_ID=PARAM_ID,
         R.PARENT_ID=PARENT_ID,
         R.NAME=NAME,
         R.DESCRIPTION=DESCRIPTION,
         R.EXPORT=EXPORT,
         R.PRIORITY=PRIORITY,
         R.LEVEL=LEVEL,
         R.COND=COND,
         R.VALUE=VALUE,
         R.SORTING=SORTING,
         R.HEAD_RTF=HEAD_RTF,
         R.BODY_RTF=BODY_RTF,
         R.DISABLED=DISABLED
   WHERE R.EXPORT_ID=OLD_EXPORT_ID;
   
   CALL /*PREFIX*/R_EXPORT_LEVELS(EXPORT_ID,LEVEL);

END;

--

/* Создание процедуры удаления экспорта */

CREATE PROCEDURE /*PREFIX*/D_EXPORT
(
  IN OLD_EXPORT_ID VARCHAR(32)
)
BEGIN
  DELETE FROM /*PREFIX*/EXPORTS
        WHERE EXPORT_ID=OLD_EXPORT_ID;
END;

--
