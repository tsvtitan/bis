/* Создание процедуры выборки работ проведенных с должником */

CREATE PROCEDURE /*PREFIX*/WORK_WITH_DEBTOR
  @AGREEMENT_ID VARCHAR(32),
  @DATE_BEGIN DATETIME,
  @DATE_END DATETIME
AS
BEGIN
  DECLARE @MIN_DATE DATETIME,
          @MAX_DATE DATETIME;

   SELECT @MIN_DATE=MIN(CONVERT(DATETIME,CONVERT(VARCHAR(10),DATE_BEGIN,104),104)), 
          @MAX_DATE=MAX(CONVERT(DATETIME,CONVERT(VARCHAR(10),DATE_BEGIN,104),104))
     FROM /*PREFIX*/TASKS
    WHERE RESULT_ID IS NOT NULL;

  IF (@DATE_BEGIN IS NOT NULL) SET @MIN_DATE=@DATE_BEGIN;

  IF (@DATE_END IS NOT NULL) SET @MAX_DATE=@DATE_END;

  SELECT T.* 
    FROM (SELECT D.DEAL_ID,
                 D.DEBTOR_NUM,
                 DATEADD(DAY,-D1.DEBT_PERIOD,CURRENT_TIMESTAMP) AS DATE_DEBT,
                 DB.SURNAME,
                 DB.NAME,
                 DB.PATRONYMIC,
                 CONVERT(DATETIME,CONVERT(VARCHAR(10),T.DATE_BEGIN,104),104) AS DATE_TASK,
                 T.ACTION_ID,
                 A.NAME AS ACTION_NAME,
                 T.RESULT_ID,
                 R.NAME AS RESULT_NAME,
                 T.DESCRIPTION,
                 T.DATE_BEGIN
            FROM /*PREFIX*/TASKS T
            JOIN /*PREFIX*/DEALS D ON D.DEAL_ID=T.DEAL_ID
            JOIN /*PREFIF*/DEBTORS DB ON DB.DEBTOR_ID=D.DEBTOR_ID
            JOIN (SELECT DEAL_ID, 
                         ARREAR_PERIOD+DATEDIFF(DAY,DATE_ISSUE,CURRENT_TIMESTAMP) AS DEBT_PERIOD 
                    FROM /*PREFIX*/DEALS) AS D1 ON D1.DEAL_ID=D.DEAL_ID
            JOIN /*PREFIX*/ACTIONS A ON A.ACTION_ID=T.ACTION_ID
            JOIN /*PREFIX*/RESULTS R ON R.RESULT_ID=T.RESULT_ID
           WHERE D.AGREEMENT_ID=@AGREEMENT_ID
             AND CONVERT(DATETIME,CONVERT(VARCHAR(10),DATE_BEGIN,104),104)>=@MIN_DATE
             AND CONVERT(DATETIME,CONVERT(VARCHAR(10),DATE_BEGIN,104),104)<=@MAX_DATE   
             AND T.RESULT_ID IS NOT NULL) T
   ORDER BY T.SURNAME, T.NAME, T.PATRONYMIC, T.DATE_BEGIN;

END;

--
