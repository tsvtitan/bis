/* Создание процедуры получения протокола розыгрыша */

CREATE OR ALTER PROCEDURE /*PREFIX*/GET_PROTOCOL
(
  TIRAGE_ID VARCHAR(32)
)
RETURNS
(
  TICKET_ID VARCHAR(32),
  ROUND_NUM INTEGER,
  NUM VARCHAR(8),
  SERIES VARCHAR(5),
  PRIZE_ID VARCHAR(32),
  PRIZE_NAME VARCHAR(40),
  PRIZE_COST NUMERIC(15,2),
  SURNAME VARCHAR(100),
  NAME VARCHAR(100),
  PATRONYMIC VARCHAR(100),
  ADDRESS VARCHAR(250),
  PHONE VARCHAR(100)
)
AS
DECLARE ALL_COUNT INTEGER;
DECLARE USED_COUNT INTEGER;
DECLARE NOT_USED_COUNT INTEGER;
DECLARE PRIZE_SUM NUMERIC(15,2);
DECLARE JACKPOT_SUM NUMERIC(15,2);
DECLARE FIRST_ROUND_SUM NUMERIC(15,2);
DECLARE SECOND_ROUND_SUM NUMERIC(15,2);
DECLARE THIRD_ROUND_SUM NUMERIC(15,2);
DECLARE FOURTH_ROUND_SUM NUMERIC(15,2);
DECLARE TICKET_COUNT INTEGER;
BEGIN

  EXECUTE PROCEDURE /*PREFIX*/GET_LOTTERY_STATISTICS(:TIRAGE_ID)
   RETURNING_VALUES :ALL_COUNT,:USED_COUNT,:NOT_USED_COUNT,:PRIZE_SUM,
                    :JACKPOT_SUM,:FIRST_ROUND_SUM,:SECOND_ROUND_SUM,
                    :THIRD_ROUND_SUM,:FOURTH_ROUND_SUM;

  SELECT COUNT(*)
    FROM /*PREFIX*/GET_TICKET_LINES(:TIRAGE_ID,NULL,1,1)
    INTO :TICKET_COUNT;

  IF (TICKET_COUNT=0) THEN TICKET_COUNT=1;

  PRIZE_NAME='Денежный приз';
  PRIZE_COST=FIRST_ROUND_SUM/TICKET_COUNT;
  PRIZE_COST=CAST(PRIZE_COST AS NUMERIC(15,0));

  FOR SELECT TL.TICKET_ID,1,T.NUM,T.SERIES,
             NULL,:PRIZE_NAME,:PRIZE_COST,
             T.SURNAME,T.NAME,T.PATRONYMIC,T.ADDRESS,T.PHONE
        FROM /*PREFIX*/GET_TICKET_LINES(:TIRAGE_ID,NULL,1,1) TL
        JOIN /*PREFIX*/TICKETS T ON T.TICKET_ID=TL.TICKET_ID
        INTO :TICKET_ID,:ROUND_NUM,:NUM,:SERIES,
             :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST,
             :SURNAME,:NAME,:PATRONYMIC,:ADDRESS,:PHONE DO BEGIN
    SUSPEND;
  END

  SELECT COUNT(*)
    FROM /*PREFIX*/GET_TICKET_LINE_COUNT(:TIRAGE_ID,NULL,2,1)
   WHERE LINE_COUNT>3
    INTO :TICKET_COUNT;

  IF (TICKET_COUNT=0) THEN TICKET_COUNT=1;

  PRIZE_NAME='Денежный приз';
  PRIZE_COST=SECOND_ROUND_SUM/TICKET_COUNT;
  PRIZE_COST=CAST(PRIZE_COST AS NUMERIC(15,0));

  FOR SELECT TL.TICKET_ID,2,T.NUM,T.SERIES,
             NULL,:PRIZE_NAME,:PRIZE_COST,
             T.SURNAME,T.NAME,T.PATRONYMIC,T.ADDRESS,T.PHONE
        FROM /*PREFIX*/GET_TICKET_LINE_COUNT(:TIRAGE_ID,NULL,2,1) TL
        JOIN /*PREFIX*/TICKETS T ON T.TICKET_ID=TL.TICKET_ID
       WHERE TL.LINE_COUNT>3
        INTO :TICKET_ID,:ROUND_NUM,:NUM,:SERIES,
             :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST,
             :SURNAME,:NAME,:PATRONYMIC,:ADDRESS,:PHONE DO BEGIN
    SUSPEND;
  END

  FOR SELECT PRIZE_ID, NAME, COST
        FROM /*PREFIX*/PRIZES
       WHERE TIRAGE_ID=:TIRAGE_ID
         AND ROUND_NUM=3
       ORDER BY PRIORITY
        INTO :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST DO BEGIN

    SELECT COUNT(*)
      FROM /*PREFIX*/GET_TICKET_SERIES(:TIRAGE_ID,:PRIZE_ID,3)
      INTO :TICKET_COUNT;

    IF (TICKET_COUNT=0) THEN TICKET_COUNT=1;

    PRIZE_COST=PRIZE_COST/TICKET_COUNT;
    PRIZE_COST=CAST(PRIZE_COST AS NUMERIC(15,0));

    FOR SELECT TL.TICKET_ID,3,T.NUM,T.SERIES,
               :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST,
               T.SURNAME,T.NAME,T.PATRONYMIC,T.ADDRESS,T.PHONE
          FROM /*PREFIX*/GET_TICKET_SERIES(:TIRAGE_ID,:PRIZE_ID,3) TL
          JOIN /*PREFIX*/TICKETS T ON T.TICKET_ID=TL.TICKET_ID
          INTO :TICKET_ID,:ROUND_NUM,:NUM,:SERIES,
               :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST,
               :SURNAME,:NAME,:PATRONYMIC,:ADDRESS,:PHONE DO BEGIN
      SUSPEND;
    END
  END

  SELECT COUNT(*)
    FROM /*PREFIX*/GET_TICKET_NUM(:TIRAGE_ID,NULL,4)
    INTO :TICKET_COUNT;

  IF (TICKET_COUNT=0) THEN TICKET_COUNT=1;

  PRIZE_NAME='Квартира';
  PRIZE_COST=FOURTH_ROUND_SUM/TICKET_COUNT;
  PRIZE_COST=CAST(PRIZE_COST AS NUMERIC(15,0));

  FOR SELECT TL.TICKET_ID,4,T.NUM,T.SERIES,
             NULL,:PRIZE_NAME,:PRIZE_COST,
             T.SURNAME,T.NAME,T.PATRONYMIC,T.ADDRESS,T.PHONE
        FROM /*PREFIX*/GET_TICKET_NUM(:TIRAGE_ID,NULL,4) TL
        JOIN /*PREFIX*/TICKETS T ON T.TICKET_ID=TL.TICKET_ID
        INTO :TICKET_ID,:ROUND_NUM,:NUM,:SERIES,
             :PRIZE_ID,:PRIZE_NAME,:PRIZE_COST,
             :SURNAME,:NAME,:PATRONYMIC,:ADDRESS,:PHONE DO BEGIN
    SUSPEND;
  END

END;

--

/* Фиксация изменений */

COMMIT